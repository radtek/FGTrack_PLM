//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace HTN.BITS.UIL.PLASESS.TableSchema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DTS_DELIVERY_ORDER")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DTS_DELIVERY_ORDER : global::System.Data.DataSet {
        
        private T_DO_HDRDataTable tableT_DO_HDR;
        
        private T_DO_DTLDataTable tableT_DO_DTL;
        
        private global::System.Data.DataRelation relationT_DO_HDR_T_DO_DTL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DTS_DELIVERY_ORDER() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DTS_DELIVERY_ORDER(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_DO_HDR"] != null)) {
                    base.Tables.Add(new T_DO_HDRDataTable(ds.Tables["T_DO_HDR"]));
                }
                if ((ds.Tables["T_DO_DTL"] != null)) {
                    base.Tables.Add(new T_DO_DTLDataTable(ds.Tables["T_DO_DTL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_DO_HDRDataTable T_DO_HDR {
            get {
                return this.tableT_DO_HDR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_DO_DTLDataTable T_DO_DTL {
            get {
                return this.tableT_DO_DTL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DTS_DELIVERY_ORDER cln = ((DTS_DELIVERY_ORDER)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["T_DO_HDR"] != null)) {
                    base.Tables.Add(new T_DO_HDRDataTable(ds.Tables["T_DO_HDR"]));
                }
                if ((ds.Tables["T_DO_DTL"] != null)) {
                    base.Tables.Add(new T_DO_DTLDataTable(ds.Tables["T_DO_DTL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableT_DO_HDR = ((T_DO_HDRDataTable)(base.Tables["T_DO_HDR"]));
            if ((initTable == true)) {
                if ((this.tableT_DO_HDR != null)) {
                    this.tableT_DO_HDR.InitVars();
                }
            }
            this.tableT_DO_DTL = ((T_DO_DTLDataTable)(base.Tables["T_DO_DTL"]));
            if ((initTable == true)) {
                if ((this.tableT_DO_DTL != null)) {
                    this.tableT_DO_DTL.InitVars();
                }
            }
            this.relationT_DO_HDR_T_DO_DTL = this.Relations["T_DO_HDR_T_DO_DTL"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DTS_DELIVERY_ORDER";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DTS_DELIVERY_ORDER.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableT_DO_HDR = new T_DO_HDRDataTable();
            base.Tables.Add(this.tableT_DO_HDR);
            this.tableT_DO_DTL = new T_DO_DTLDataTable();
            base.Tables.Add(this.tableT_DO_DTL);
            this.relationT_DO_HDR_T_DO_DTL = new global::System.Data.DataRelation("T_DO_HDR_T_DO_DTL", new global::System.Data.DataColumn[] {
                        this.tableT_DO_HDR.DO_NOColumn}, new global::System.Data.DataColumn[] {
                        this.tableT_DO_DTL.DO_NOColumn}, false);
            this.Relations.Add(this.relationT_DO_HDR_T_DO_DTL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_DO_HDR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_DO_DTL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DTS_DELIVERY_ORDER ds = new DTS_DELIVERY_ORDER();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void T_DO_HDRRowChangeEventHandler(object sender, T_DO_HDRRowChangeEvent e);
        
        public delegate void T_DO_DTLRowChangeEventHandler(object sender, T_DO_DTLRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_DO_HDRDataTable : global::System.Data.TypedTableBase<T_DO_HDRRow> {
            
            private global::System.Data.DataColumn columnDO_NO;
            
            private global::System.Data.DataColumn columnREF_NO;
            
            private global::System.Data.DataColumn columnDO_DATE;
            
            private global::System.Data.DataColumn columnPROD_TYPE;
            
            private global::System.Data.DataColumn columnTO_DEST;
            
            private global::System.Data.DataColumn columnDELIVERY_DATE;
            
            private global::System.Data.DataColumn columnREMARK;
            
            private global::System.Data.DataColumn columnBARCODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DO_HDRDataTable() {
                this.TableName = "T_DO_HDR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_DO_HDRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_DO_HDRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DO_NOColumn {
                get {
                    return this.columnDO_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REF_NOColumn {
                get {
                    return this.columnREF_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DO_DATEColumn {
                get {
                    return this.columnDO_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROD_TYPEColumn {
                get {
                    return this.columnPROD_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TO_DESTColumn {
                get {
                    return this.columnTO_DEST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DELIVERY_DATEColumn {
                get {
                    return this.columnDELIVERY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BARCODEColumn {
                get {
                    return this.columnBARCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DO_HDRRow this[int index] {
                get {
                    return ((T_DO_HDRRow)(this.Rows[index]));
                }
            }
            
            public event T_DO_HDRRowChangeEventHandler T_DO_HDRRowChanging;
            
            public event T_DO_HDRRowChangeEventHandler T_DO_HDRRowChanged;
            
            public event T_DO_HDRRowChangeEventHandler T_DO_HDRRowDeleting;
            
            public event T_DO_HDRRowChangeEventHandler T_DO_HDRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_DO_HDRRow(T_DO_HDRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DO_HDRRow AddT_DO_HDRRow(string DO_NO, string REF_NO, string DO_DATE, string PROD_TYPE, string TO_DEST, string DELIVERY_DATE, string REMARK, System.Drawing.Bitmap BARCODE) {
                T_DO_HDRRow rowT_DO_HDRRow = ((T_DO_HDRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DO_NO,
                        REF_NO,
                        DO_DATE,
                        PROD_TYPE,
                        TO_DEST,
                        DELIVERY_DATE,
                        REMARK,
                        BARCODE};
                rowT_DO_HDRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_DO_HDRRow);
                return rowT_DO_HDRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_DO_HDRDataTable cln = ((T_DO_HDRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_DO_HDRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDO_NO = base.Columns["DO_NO"];
                this.columnREF_NO = base.Columns["REF_NO"];
                this.columnDO_DATE = base.Columns["DO_DATE"];
                this.columnPROD_TYPE = base.Columns["PROD_TYPE"];
                this.columnTO_DEST = base.Columns["TO_DEST"];
                this.columnDELIVERY_DATE = base.Columns["DELIVERY_DATE"];
                this.columnREMARK = base.Columns["REMARK"];
                this.columnBARCODE = base.Columns["BARCODE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDO_NO = new global::System.Data.DataColumn("DO_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_NO);
                this.columnREF_NO = new global::System.Data.DataColumn("REF_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_NO);
                this.columnDO_DATE = new global::System.Data.DataColumn("DO_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_DATE);
                this.columnPROD_TYPE = new global::System.Data.DataColumn("PROD_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_TYPE);
                this.columnTO_DEST = new global::System.Data.DataColumn("TO_DEST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTO_DEST);
                this.columnDELIVERY_DATE = new global::System.Data.DataColumn("DELIVERY_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDELIVERY_DATE);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.columnBARCODE = new global::System.Data.DataColumn("BARCODE", typeof(global::System.Drawing.Bitmap), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBARCODE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DO_HDRRow NewT_DO_HDRRow() {
                return ((T_DO_HDRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_DO_HDRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_DO_HDRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_DO_HDRRowChanged != null)) {
                    this.T_DO_HDRRowChanged(this, new T_DO_HDRRowChangeEvent(((T_DO_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_DO_HDRRowChanging != null)) {
                    this.T_DO_HDRRowChanging(this, new T_DO_HDRRowChangeEvent(((T_DO_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_DO_HDRRowDeleted != null)) {
                    this.T_DO_HDRRowDeleted(this, new T_DO_HDRRowChangeEvent(((T_DO_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_DO_HDRRowDeleting != null)) {
                    this.T_DO_HDRRowDeleting(this, new T_DO_HDRRowChangeEvent(((T_DO_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_DO_HDRRow(T_DO_HDRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DTS_DELIVERY_ORDER ds = new DTS_DELIVERY_ORDER();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_DO_HDRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_DO_DTLDataTable : global::System.Data.TypedTableBase<T_DO_DTLRow> {
            
            private global::System.Data.DataColumn columnDO_NO;
            
            private global::System.Data.DataColumn columnPRODUCT_NO;
            
            private global::System.Data.DataColumn columnPRODUCT_NAME;
            
            private global::System.Data.DataColumn columnQTY;
            
            private global::System.Data.DataColumn columnUNIT_ID;
            
            private global::System.Data.DataColumn columnQTY_PER_BOX;
            
            private global::System.Data.DataColumn columnNO_OF_BOX;
            
            private global::System.Data.DataColumn columnREMARK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DO_DTLDataTable() {
                this.TableName = "T_DO_DTL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_DO_DTLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_DO_DTLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DO_NOColumn {
                get {
                    return this.columnDO_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NOColumn {
                get {
                    return this.columnPRODUCT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NAMEColumn {
                get {
                    return this.columnPRODUCT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTYColumn {
                get {
                    return this.columnQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNIT_IDColumn {
                get {
                    return this.columnUNIT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTY_PER_BOXColumn {
                get {
                    return this.columnQTY_PER_BOX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NO_OF_BOXColumn {
                get {
                    return this.columnNO_OF_BOX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DO_DTLRow this[int index] {
                get {
                    return ((T_DO_DTLRow)(this.Rows[index]));
                }
            }
            
            public event T_DO_DTLRowChangeEventHandler T_DO_DTLRowChanging;
            
            public event T_DO_DTLRowChangeEventHandler T_DO_DTLRowChanged;
            
            public event T_DO_DTLRowChangeEventHandler T_DO_DTLRowDeleting;
            
            public event T_DO_DTLRowChangeEventHandler T_DO_DTLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_DO_DTLRow(T_DO_DTLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DO_DTLRow AddT_DO_DTLRow(T_DO_HDRRow parentT_DO_HDRRowByT_DO_HDR_T_DO_DTL, string PRODUCT_NO, string PRODUCT_NAME, string QTY, string UNIT_ID, string QTY_PER_BOX, string NO_OF_BOX, string REMARK) {
                T_DO_DTLRow rowT_DO_DTLRow = ((T_DO_DTLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PRODUCT_NO,
                        PRODUCT_NAME,
                        QTY,
                        UNIT_ID,
                        QTY_PER_BOX,
                        NO_OF_BOX,
                        REMARK};
                if ((parentT_DO_HDRRowByT_DO_HDR_T_DO_DTL != null)) {
                    columnValuesArray[0] = parentT_DO_HDRRowByT_DO_HDR_T_DO_DTL[0];
                }
                rowT_DO_DTLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_DO_DTLRow);
                return rowT_DO_DTLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_DO_DTLDataTable cln = ((T_DO_DTLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_DO_DTLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDO_NO = base.Columns["DO_NO"];
                this.columnPRODUCT_NO = base.Columns["PRODUCT_NO"];
                this.columnPRODUCT_NAME = base.Columns["PRODUCT_NAME"];
                this.columnQTY = base.Columns["QTY"];
                this.columnUNIT_ID = base.Columns["UNIT_ID"];
                this.columnQTY_PER_BOX = base.Columns["QTY_PER_BOX"];
                this.columnNO_OF_BOX = base.Columns["NO_OF_BOX"];
                this.columnREMARK = base.Columns["REMARK"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDO_NO = new global::System.Data.DataColumn("DO_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_NO);
                this.columnPRODUCT_NO = new global::System.Data.DataColumn("PRODUCT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NO);
                this.columnPRODUCT_NAME = new global::System.Data.DataColumn("PRODUCT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NAME);
                this.columnQTY = new global::System.Data.DataColumn("QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY);
                this.columnUNIT_ID = new global::System.Data.DataColumn("UNIT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_ID);
                this.columnQTY_PER_BOX = new global::System.Data.DataColumn("QTY_PER_BOX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY_PER_BOX);
                this.columnNO_OF_BOX = new global::System.Data.DataColumn("NO_OF_BOX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO_OF_BOX);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DO_DTLRow NewT_DO_DTLRow() {
                return ((T_DO_DTLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_DO_DTLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_DO_DTLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_DO_DTLRowChanged != null)) {
                    this.T_DO_DTLRowChanged(this, new T_DO_DTLRowChangeEvent(((T_DO_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_DO_DTLRowChanging != null)) {
                    this.T_DO_DTLRowChanging(this, new T_DO_DTLRowChangeEvent(((T_DO_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_DO_DTLRowDeleted != null)) {
                    this.T_DO_DTLRowDeleted(this, new T_DO_DTLRowChangeEvent(((T_DO_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_DO_DTLRowDeleting != null)) {
                    this.T_DO_DTLRowDeleting(this, new T_DO_DTLRowChangeEvent(((T_DO_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_DO_DTLRow(T_DO_DTLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DTS_DELIVERY_ORDER ds = new DTS_DELIVERY_ORDER();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_DO_DTLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_DO_HDRRow : global::System.Data.DataRow {
            
            private T_DO_HDRDataTable tableT_DO_HDR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_DO_HDRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_DO_HDR = ((T_DO_HDRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_DO_HDR.DO_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_NO\' in table \'T_DO_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_HDR.DO_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_DO_HDR.REF_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REF_NO\' in table \'T_DO_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_HDR.REF_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO_DATE {
                get {
                    try {
                        return ((string)(this[this.tableT_DO_HDR.DO_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_DATE\' in table \'T_DO_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_HDR.DO_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROD_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableT_DO_HDR.PROD_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROD_TYPE\' in table \'T_DO_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_HDR.PROD_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TO_DEST {
                get {
                    try {
                        return ((string)(this[this.tableT_DO_HDR.TO_DESTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TO_DEST\' in table \'T_DO_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_HDR.TO_DESTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DELIVERY_DATE {
                get {
                    try {
                        return ((string)(this[this.tableT_DO_HDR.DELIVERY_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DELIVERY_DATE\' in table \'T_DO_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_HDR.DELIVERY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REMARK {
                get {
                    try {
                        return ((string)(this[this.tableT_DO_HDR.REMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARK\' in table \'T_DO_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_HDR.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Bitmap BARCODE {
                get {
                    try {
                        return ((global::System.Drawing.Bitmap)(this[this.tableT_DO_HDR.BARCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BARCODE\' in table \'T_DO_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_HDR.BARCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDO_NONull() {
                return this.IsNull(this.tableT_DO_HDR.DO_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDO_NONull() {
                this[this.tableT_DO_HDR.DO_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREF_NONull() {
                return this.IsNull(this.tableT_DO_HDR.REF_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREF_NONull() {
                this[this.tableT_DO_HDR.REF_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDO_DATENull() {
                return this.IsNull(this.tableT_DO_HDR.DO_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDO_DATENull() {
                this[this.tableT_DO_HDR.DO_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROD_TYPENull() {
                return this.IsNull(this.tableT_DO_HDR.PROD_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROD_TYPENull() {
                this[this.tableT_DO_HDR.PROD_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTO_DESTNull() {
                return this.IsNull(this.tableT_DO_HDR.TO_DESTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTO_DESTNull() {
                this[this.tableT_DO_HDR.TO_DESTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDELIVERY_DATENull() {
                return this.IsNull(this.tableT_DO_HDR.DELIVERY_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDELIVERY_DATENull() {
                this[this.tableT_DO_HDR.DELIVERY_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREMARKNull() {
                return this.IsNull(this.tableT_DO_HDR.REMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREMARKNull() {
                this[this.tableT_DO_HDR.REMARKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBARCODENull() {
                return this.IsNull(this.tableT_DO_HDR.BARCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBARCODENull() {
                this[this.tableT_DO_HDR.BARCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DO_DTLRow[] GetT_DO_DTLRows() {
                if ((this.Table.ChildRelations["T_DO_HDR_T_DO_DTL"] == null)) {
                    return new T_DO_DTLRow[0];
                }
                else {
                    return ((T_DO_DTLRow[])(base.GetChildRows(this.Table.ChildRelations["T_DO_HDR_T_DO_DTL"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_DO_DTLRow : global::System.Data.DataRow {
            
            private T_DO_DTLDataTable tableT_DO_DTL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_DO_DTLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_DO_DTL = ((T_DO_DTLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DO_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_DO_DTL.DO_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_NO\' in table \'T_DO_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_DTL.DO_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_DO_DTL.PRODUCT_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_NO\' in table \'T_DO_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_DTL.PRODUCT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableT_DO_DTL.PRODUCT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_NAME\' in table \'T_DO_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_DTL.PRODUCT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QTY {
                get {
                    try {
                        return ((string)(this[this.tableT_DO_DTL.QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QTY\' in table \'T_DO_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_DTL.QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNIT_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_DO_DTL.UNIT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIT_ID\' in table \'T_DO_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_DTL.UNIT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QTY_PER_BOX {
                get {
                    try {
                        return ((string)(this[this.tableT_DO_DTL.QTY_PER_BOXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QTY_PER_BOX\' in table \'T_DO_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_DTL.QTY_PER_BOXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NO_OF_BOX {
                get {
                    try {
                        return ((string)(this[this.tableT_DO_DTL.NO_OF_BOXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NO_OF_BOX\' in table \'T_DO_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_DTL.NO_OF_BOXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REMARK {
                get {
                    try {
                        return ((string)(this[this.tableT_DO_DTL.REMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARK\' in table \'T_DO_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DO_DTL.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DO_HDRRow T_DO_HDRRow {
                get {
                    return ((T_DO_HDRRow)(this.GetParentRow(this.Table.ParentRelations["T_DO_HDR_T_DO_DTL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["T_DO_HDR_T_DO_DTL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDO_NONull() {
                return this.IsNull(this.tableT_DO_DTL.DO_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDO_NONull() {
                this[this.tableT_DO_DTL.DO_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_NONull() {
                return this.IsNull(this.tableT_DO_DTL.PRODUCT_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_NONull() {
                this[this.tableT_DO_DTL.PRODUCT_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_NAMENull() {
                return this.IsNull(this.tableT_DO_DTL.PRODUCT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_NAMENull() {
                this[this.tableT_DO_DTL.PRODUCT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTYNull() {
                return this.IsNull(this.tableT_DO_DTL.QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTYNull() {
                this[this.tableT_DO_DTL.QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNIT_IDNull() {
                return this.IsNull(this.tableT_DO_DTL.UNIT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNIT_IDNull() {
                this[this.tableT_DO_DTL.UNIT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTY_PER_BOXNull() {
                return this.IsNull(this.tableT_DO_DTL.QTY_PER_BOXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTY_PER_BOXNull() {
                this[this.tableT_DO_DTL.QTY_PER_BOXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNO_OF_BOXNull() {
                return this.IsNull(this.tableT_DO_DTL.NO_OF_BOXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNO_OF_BOXNull() {
                this[this.tableT_DO_DTL.NO_OF_BOXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREMARKNull() {
                return this.IsNull(this.tableT_DO_DTL.REMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREMARKNull() {
                this[this.tableT_DO_DTL.REMARKColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_DO_HDRRowChangeEvent : global::System.EventArgs {
            
            private T_DO_HDRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DO_HDRRowChangeEvent(T_DO_HDRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DO_HDRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_DO_DTLRowChangeEvent : global::System.EventArgs {
            
            private T_DO_DTLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DO_DTLRowChangeEvent(T_DO_DTLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DO_DTLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591