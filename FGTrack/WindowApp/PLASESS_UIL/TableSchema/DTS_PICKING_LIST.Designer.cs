//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace HTN.BITS.UIL.PLASESS.TableSchema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DTS_PICKING_LIST")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DTS_PICKING_LIST : global::System.Data.DataSet {
        
        private T_PICKING_HDRDataTable tableT_PICKING_HDR;
        
        private T_PICKING_DTLDataTable tableT_PICKING_DTL;
        
        private global::System.Data.DataRelation relationT_PICKING_HDR_T_PICKING_DTL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DTS_PICKING_LIST() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DTS_PICKING_LIST(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_PICKING_HDR"] != null)) {
                    base.Tables.Add(new T_PICKING_HDRDataTable(ds.Tables["T_PICKING_HDR"]));
                }
                if ((ds.Tables["T_PICKING_DTL"] != null)) {
                    base.Tables.Add(new T_PICKING_DTLDataTable(ds.Tables["T_PICKING_DTL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PICKING_HDRDataTable T_PICKING_HDR {
            get {
                return this.tableT_PICKING_HDR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PICKING_DTLDataTable T_PICKING_DTL {
            get {
                return this.tableT_PICKING_DTL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DTS_PICKING_LIST cln = ((DTS_PICKING_LIST)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["T_PICKING_HDR"] != null)) {
                    base.Tables.Add(new T_PICKING_HDRDataTable(ds.Tables["T_PICKING_HDR"]));
                }
                if ((ds.Tables["T_PICKING_DTL"] != null)) {
                    base.Tables.Add(new T_PICKING_DTLDataTable(ds.Tables["T_PICKING_DTL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableT_PICKING_HDR = ((T_PICKING_HDRDataTable)(base.Tables["T_PICKING_HDR"]));
            if ((initTable == true)) {
                if ((this.tableT_PICKING_HDR != null)) {
                    this.tableT_PICKING_HDR.InitVars();
                }
            }
            this.tableT_PICKING_DTL = ((T_PICKING_DTLDataTable)(base.Tables["T_PICKING_DTL"]));
            if ((initTable == true)) {
                if ((this.tableT_PICKING_DTL != null)) {
                    this.tableT_PICKING_DTL.InitVars();
                }
            }
            this.relationT_PICKING_HDR_T_PICKING_DTL = this.Relations["T_PICKING_HDR_T_PICKING_DTL"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DTS_PICKING_LIST";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DTS_PICKING_LIST.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableT_PICKING_HDR = new T_PICKING_HDRDataTable();
            base.Tables.Add(this.tableT_PICKING_HDR);
            this.tableT_PICKING_DTL = new T_PICKING_DTLDataTable();
            base.Tables.Add(this.tableT_PICKING_DTL);
            this.relationT_PICKING_HDR_T_PICKING_DTL = new global::System.Data.DataRelation("T_PICKING_HDR_T_PICKING_DTL", new global::System.Data.DataColumn[] {
                        this.tableT_PICKING_HDR.PICK_NOColumn}, new global::System.Data.DataColumn[] {
                        this.tableT_PICKING_DTL.PICK_NOColumn}, false);
            this.Relations.Add(this.relationT_PICKING_HDR_T_PICKING_DTL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PICKING_HDR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PICKING_DTL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DTS_PICKING_LIST ds = new DTS_PICKING_LIST();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void T_PICKING_HDRRowChangeEventHandler(object sender, T_PICKING_HDRRowChangeEvent e);
        
        public delegate void T_PICKING_DTLRowChangeEventHandler(object sender, T_PICKING_DTLRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PICKING_HDRDataTable : global::System.Data.TypedTableBase<T_PICKING_HDRRow> {
            
            private global::System.Data.DataColumn columnPICK_NO;
            
            private global::System.Data.DataColumn columnCUSTOMER_NAME;
            
            private global::System.Data.DataColumn columnETA;
            
            private global::System.Data.DataColumn columnREF_NO;
            
            private global::System.Data.DataColumn columnBARCODE;
            
            private global::System.Data.DataColumn columnSO_NO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PICKING_HDRDataTable() {
                this.TableName = "T_PICKING_HDR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PICKING_HDRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PICKING_HDRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PICK_NOColumn {
                get {
                    return this.columnPICK_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMER_NAMEColumn {
                get {
                    return this.columnCUSTOMER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETAColumn {
                get {
                    return this.columnETA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REF_NOColumn {
                get {
                    return this.columnREF_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BARCODEColumn {
                get {
                    return this.columnBARCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_NOColumn {
                get {
                    return this.columnSO_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PICKING_HDRRow this[int index] {
                get {
                    return ((T_PICKING_HDRRow)(this.Rows[index]));
                }
            }
            
            public event T_PICKING_HDRRowChangeEventHandler T_PICKING_HDRRowChanging;
            
            public event T_PICKING_HDRRowChangeEventHandler T_PICKING_HDRRowChanged;
            
            public event T_PICKING_HDRRowChangeEventHandler T_PICKING_HDRRowDeleting;
            
            public event T_PICKING_HDRRowChangeEventHandler T_PICKING_HDRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PICKING_HDRRow(T_PICKING_HDRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PICKING_HDRRow AddT_PICKING_HDRRow(string PICK_NO, string CUSTOMER_NAME, string ETA, string REF_NO, System.Drawing.Bitmap BARCODE, string SO_NO) {
                T_PICKING_HDRRow rowT_PICKING_HDRRow = ((T_PICKING_HDRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PICK_NO,
                        CUSTOMER_NAME,
                        ETA,
                        REF_NO,
                        BARCODE,
                        SO_NO};
                rowT_PICKING_HDRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PICKING_HDRRow);
                return rowT_PICKING_HDRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PICKING_HDRDataTable cln = ((T_PICKING_HDRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PICKING_HDRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPICK_NO = base.Columns["PICK_NO"];
                this.columnCUSTOMER_NAME = base.Columns["CUSTOMER_NAME"];
                this.columnETA = base.Columns["ETA"];
                this.columnREF_NO = base.Columns["REF_NO"];
                this.columnBARCODE = base.Columns["BARCODE"];
                this.columnSO_NO = base.Columns["SO_NO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPICK_NO = new global::System.Data.DataColumn("PICK_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICK_NO);
                this.columnCUSTOMER_NAME = new global::System.Data.DataColumn("CUSTOMER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_NAME);
                this.columnETA = new global::System.Data.DataColumn("ETA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETA);
                this.columnREF_NO = new global::System.Data.DataColumn("REF_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_NO);
                this.columnBARCODE = new global::System.Data.DataColumn("BARCODE", typeof(global::System.Drawing.Bitmap), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBARCODE);
                this.columnSO_NO = new global::System.Data.DataColumn("SO_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_NO);
                this.columnETA.DefaultValue = ((string)(""));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PICKING_HDRRow NewT_PICKING_HDRRow() {
                return ((T_PICKING_HDRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PICKING_HDRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PICKING_HDRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PICKING_HDRRowChanged != null)) {
                    this.T_PICKING_HDRRowChanged(this, new T_PICKING_HDRRowChangeEvent(((T_PICKING_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PICKING_HDRRowChanging != null)) {
                    this.T_PICKING_HDRRowChanging(this, new T_PICKING_HDRRowChangeEvent(((T_PICKING_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PICKING_HDRRowDeleted != null)) {
                    this.T_PICKING_HDRRowDeleted(this, new T_PICKING_HDRRowChangeEvent(((T_PICKING_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PICKING_HDRRowDeleting != null)) {
                    this.T_PICKING_HDRRowDeleting(this, new T_PICKING_HDRRowChangeEvent(((T_PICKING_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PICKING_HDRRow(T_PICKING_HDRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DTS_PICKING_LIST ds = new DTS_PICKING_LIST();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PICKING_HDRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PICKING_DTLDataTable : global::System.Data.TypedTableBase<T_PICKING_DTLRow> {
            
            private global::System.Data.DataColumn columnPICK_NO;
            
            private global::System.Data.DataColumn columnLINE_NO;
            
            private global::System.Data.DataColumn columnPRODUCT_NO;
            
            private global::System.Data.DataColumn columnPRODUCT_NAME;
            
            private global::System.Data.DataColumn columnQTY;
            
            private global::System.Data.DataColumn columnUNIT;
            
            private global::System.Data.DataColumn columnBOX_QTY;
            
            private global::System.Data.DataColumn columnNO_OF_BOX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PICKING_DTLDataTable() {
                this.TableName = "T_PICKING_DTL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PICKING_DTLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PICKING_DTLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PICK_NOColumn {
                get {
                    return this.columnPICK_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LINE_NOColumn {
                get {
                    return this.columnLINE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NOColumn {
                get {
                    return this.columnPRODUCT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NAMEColumn {
                get {
                    return this.columnPRODUCT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTYColumn {
                get {
                    return this.columnQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNITColumn {
                get {
                    return this.columnUNIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_QTYColumn {
                get {
                    return this.columnBOX_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NO_OF_BOXColumn {
                get {
                    return this.columnNO_OF_BOX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PICKING_DTLRow this[int index] {
                get {
                    return ((T_PICKING_DTLRow)(this.Rows[index]));
                }
            }
            
            public event T_PICKING_DTLRowChangeEventHandler T_PICKING_DTLRowChanging;
            
            public event T_PICKING_DTLRowChangeEventHandler T_PICKING_DTLRowChanged;
            
            public event T_PICKING_DTLRowChangeEventHandler T_PICKING_DTLRowDeleting;
            
            public event T_PICKING_DTLRowChangeEventHandler T_PICKING_DTLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PICKING_DTLRow(T_PICKING_DTLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PICKING_DTLRow AddT_PICKING_DTLRow(T_PICKING_HDRRow parentT_PICKING_HDRRowByT_PICKING_HDR_T_PICKING_DTL, string LINE_NO, string PRODUCT_NO, string PRODUCT_NAME, string QTY, string UNIT, string BOX_QTY, string NO_OF_BOX) {
                T_PICKING_DTLRow rowT_PICKING_DTLRow = ((T_PICKING_DTLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        LINE_NO,
                        PRODUCT_NO,
                        PRODUCT_NAME,
                        QTY,
                        UNIT,
                        BOX_QTY,
                        NO_OF_BOX};
                if ((parentT_PICKING_HDRRowByT_PICKING_HDR_T_PICKING_DTL != null)) {
                    columnValuesArray[0] = parentT_PICKING_HDRRowByT_PICKING_HDR_T_PICKING_DTL[0];
                }
                rowT_PICKING_DTLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PICKING_DTLRow);
                return rowT_PICKING_DTLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PICKING_DTLDataTable cln = ((T_PICKING_DTLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PICKING_DTLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPICK_NO = base.Columns["PICK_NO"];
                this.columnLINE_NO = base.Columns["LINE_NO"];
                this.columnPRODUCT_NO = base.Columns["PRODUCT_NO"];
                this.columnPRODUCT_NAME = base.Columns["PRODUCT_NAME"];
                this.columnQTY = base.Columns["QTY"];
                this.columnUNIT = base.Columns["UNIT"];
                this.columnBOX_QTY = base.Columns["BOX_QTY"];
                this.columnNO_OF_BOX = base.Columns["NO_OF_BOX"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPICK_NO = new global::System.Data.DataColumn("PICK_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICK_NO);
                this.columnLINE_NO = new global::System.Data.DataColumn("LINE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLINE_NO);
                this.columnPRODUCT_NO = new global::System.Data.DataColumn("PRODUCT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NO);
                this.columnPRODUCT_NAME = new global::System.Data.DataColumn("PRODUCT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NAME);
                this.columnQTY = new global::System.Data.DataColumn("QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY);
                this.columnUNIT = new global::System.Data.DataColumn("UNIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT);
                this.columnBOX_QTY = new global::System.Data.DataColumn("BOX_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOX_QTY);
                this.columnNO_OF_BOX = new global::System.Data.DataColumn("NO_OF_BOX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO_OF_BOX);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PICKING_DTLRow NewT_PICKING_DTLRow() {
                return ((T_PICKING_DTLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PICKING_DTLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PICKING_DTLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PICKING_DTLRowChanged != null)) {
                    this.T_PICKING_DTLRowChanged(this, new T_PICKING_DTLRowChangeEvent(((T_PICKING_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PICKING_DTLRowChanging != null)) {
                    this.T_PICKING_DTLRowChanging(this, new T_PICKING_DTLRowChangeEvent(((T_PICKING_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PICKING_DTLRowDeleted != null)) {
                    this.T_PICKING_DTLRowDeleted(this, new T_PICKING_DTLRowChangeEvent(((T_PICKING_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PICKING_DTLRowDeleting != null)) {
                    this.T_PICKING_DTLRowDeleting(this, new T_PICKING_DTLRowChangeEvent(((T_PICKING_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PICKING_DTLRow(T_PICKING_DTLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DTS_PICKING_LIST ds = new DTS_PICKING_LIST();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PICKING_DTLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PICKING_HDRRow : global::System.Data.DataRow {
            
            private T_PICKING_HDRDataTable tableT_PICKING_HDR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PICKING_HDRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PICKING_HDR = ((T_PICKING_HDRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PICK_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_PICKING_HDR.PICK_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PICK_NO\' in table \'T_PICKING_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PICKING_HDR.PICK_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableT_PICKING_HDR.CUSTOMER_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER_NAME\' in table \'T_PICKING_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PICKING_HDR.CUSTOMER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ETA {
                get {
                    if (this.IsETANull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_PICKING_HDR.ETAColumn]));
                    }
                }
                set {
                    this[this.tableT_PICKING_HDR.ETAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_PICKING_HDR.REF_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REF_NO\' in table \'T_PICKING_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PICKING_HDR.REF_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Bitmap BARCODE {
                get {
                    try {
                        return ((global::System.Drawing.Bitmap)(this[this.tableT_PICKING_HDR.BARCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BARCODE\' in table \'T_PICKING_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PICKING_HDR.BARCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SO_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_PICKING_HDR.SO_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SO_NO\' in table \'T_PICKING_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PICKING_HDR.SO_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPICK_NONull() {
                return this.IsNull(this.tableT_PICKING_HDR.PICK_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPICK_NONull() {
                this[this.tableT_PICKING_HDR.PICK_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_NAMENull() {
                return this.IsNull(this.tableT_PICKING_HDR.CUSTOMER_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_NAMENull() {
                this[this.tableT_PICKING_HDR.CUSTOMER_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsETANull() {
                return this.IsNull(this.tableT_PICKING_HDR.ETAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetETANull() {
                this[this.tableT_PICKING_HDR.ETAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREF_NONull() {
                return this.IsNull(this.tableT_PICKING_HDR.REF_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREF_NONull() {
                this[this.tableT_PICKING_HDR.REF_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBARCODENull() {
                return this.IsNull(this.tableT_PICKING_HDR.BARCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBARCODENull() {
                this[this.tableT_PICKING_HDR.BARCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_NONull() {
                return this.IsNull(this.tableT_PICKING_HDR.SO_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_NONull() {
                this[this.tableT_PICKING_HDR.SO_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PICKING_DTLRow[] GetT_PICKING_DTLRows() {
                if ((this.Table.ChildRelations["T_PICKING_HDR_T_PICKING_DTL"] == null)) {
                    return new T_PICKING_DTLRow[0];
                }
                else {
                    return ((T_PICKING_DTLRow[])(base.GetChildRows(this.Table.ChildRelations["T_PICKING_HDR_T_PICKING_DTL"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PICKING_DTLRow : global::System.Data.DataRow {
            
            private T_PICKING_DTLDataTable tableT_PICKING_DTL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PICKING_DTLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PICKING_DTL = ((T_PICKING_DTLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PICK_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_PICKING_DTL.PICK_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PICK_NO\' in table \'T_PICKING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PICKING_DTL.PICK_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LINE_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_PICKING_DTL.LINE_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LINE_NO\' in table \'T_PICKING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PICKING_DTL.LINE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_PICKING_DTL.PRODUCT_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_NO\' in table \'T_PICKING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PICKING_DTL.PRODUCT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableT_PICKING_DTL.PRODUCT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_NAME\' in table \'T_PICKING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PICKING_DTL.PRODUCT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QTY {
                get {
                    try {
                        return ((string)(this[this.tableT_PICKING_DTL.QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QTY\' in table \'T_PICKING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PICKING_DTL.QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNIT {
                get {
                    try {
                        return ((string)(this[this.tableT_PICKING_DTL.UNITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIT\' in table \'T_PICKING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PICKING_DTL.UNITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOX_QTY {
                get {
                    try {
                        return ((string)(this[this.tableT_PICKING_DTL.BOX_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOX_QTY\' in table \'T_PICKING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PICKING_DTL.BOX_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NO_OF_BOX {
                get {
                    try {
                        return ((string)(this[this.tableT_PICKING_DTL.NO_OF_BOXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NO_OF_BOX\' in table \'T_PICKING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PICKING_DTL.NO_OF_BOXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PICKING_HDRRow T_PICKING_HDRRow {
                get {
                    return ((T_PICKING_HDRRow)(this.GetParentRow(this.Table.ParentRelations["T_PICKING_HDR_T_PICKING_DTL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["T_PICKING_HDR_T_PICKING_DTL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPICK_NONull() {
                return this.IsNull(this.tableT_PICKING_DTL.PICK_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPICK_NONull() {
                this[this.tableT_PICKING_DTL.PICK_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLINE_NONull() {
                return this.IsNull(this.tableT_PICKING_DTL.LINE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLINE_NONull() {
                this[this.tableT_PICKING_DTL.LINE_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_NONull() {
                return this.IsNull(this.tableT_PICKING_DTL.PRODUCT_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_NONull() {
                this[this.tableT_PICKING_DTL.PRODUCT_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_NAMENull() {
                return this.IsNull(this.tableT_PICKING_DTL.PRODUCT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_NAMENull() {
                this[this.tableT_PICKING_DTL.PRODUCT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTYNull() {
                return this.IsNull(this.tableT_PICKING_DTL.QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTYNull() {
                this[this.tableT_PICKING_DTL.QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNITNull() {
                return this.IsNull(this.tableT_PICKING_DTL.UNITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNITNull() {
                this[this.tableT_PICKING_DTL.UNITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOX_QTYNull() {
                return this.IsNull(this.tableT_PICKING_DTL.BOX_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOX_QTYNull() {
                this[this.tableT_PICKING_DTL.BOX_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNO_OF_BOXNull() {
                return this.IsNull(this.tableT_PICKING_DTL.NO_OF_BOXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNO_OF_BOXNull() {
                this[this.tableT_PICKING_DTL.NO_OF_BOXColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PICKING_HDRRowChangeEvent : global::System.EventArgs {
            
            private T_PICKING_HDRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PICKING_HDRRowChangeEvent(T_PICKING_HDRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PICKING_HDRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PICKING_DTLRowChangeEvent : global::System.EventArgs {
            
            private T_PICKING_DTLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PICKING_DTLRowChangeEvent(T_PICKING_DTLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PICKING_DTLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591