//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace HTN.BITS.UIL.PLASESS.TableSchema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DTS_PARTLIST_IN_PALLET")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DTS_PARTLIST_IN_PALLET : global::System.Data.DataSet {
        
        private PART_LIST_HDRDataTable tablePART_LIST_HDR;
        
        private PART_LIST_DTLDataTable tablePART_LIST_DTL;
        
        private global::System.Data.DataRelation relationPART_LIST_HDR_PART_LIST_DTL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DTS_PARTLIST_IN_PALLET() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DTS_PARTLIST_IN_PALLET(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PART_LIST_HDR"] != null)) {
                    base.Tables.Add(new PART_LIST_HDRDataTable(ds.Tables["PART_LIST_HDR"]));
                }
                if ((ds.Tables["PART_LIST_DTL"] != null)) {
                    base.Tables.Add(new PART_LIST_DTLDataTable(ds.Tables["PART_LIST_DTL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PART_LIST_HDRDataTable PART_LIST_HDR {
            get {
                return this.tablePART_LIST_HDR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PART_LIST_DTLDataTable PART_LIST_DTL {
            get {
                return this.tablePART_LIST_DTL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DTS_PARTLIST_IN_PALLET cln = ((DTS_PARTLIST_IN_PALLET)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PART_LIST_HDR"] != null)) {
                    base.Tables.Add(new PART_LIST_HDRDataTable(ds.Tables["PART_LIST_HDR"]));
                }
                if ((ds.Tables["PART_LIST_DTL"] != null)) {
                    base.Tables.Add(new PART_LIST_DTLDataTable(ds.Tables["PART_LIST_DTL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePART_LIST_HDR = ((PART_LIST_HDRDataTable)(base.Tables["PART_LIST_HDR"]));
            if ((initTable == true)) {
                if ((this.tablePART_LIST_HDR != null)) {
                    this.tablePART_LIST_HDR.InitVars();
                }
            }
            this.tablePART_LIST_DTL = ((PART_LIST_DTLDataTable)(base.Tables["PART_LIST_DTL"]));
            if ((initTable == true)) {
                if ((this.tablePART_LIST_DTL != null)) {
                    this.tablePART_LIST_DTL.InitVars();
                }
            }
            this.relationPART_LIST_HDR_PART_LIST_DTL = this.Relations["PART_LIST_HDR_PART_LIST_DTL"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DTS_PARTLIST_IN_PALLET";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DTS_PARTLIST_IN_PALLET.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePART_LIST_HDR = new PART_LIST_HDRDataTable();
            base.Tables.Add(this.tablePART_LIST_HDR);
            this.tablePART_LIST_DTL = new PART_LIST_DTLDataTable();
            base.Tables.Add(this.tablePART_LIST_DTL);
            this.relationPART_LIST_HDR_PART_LIST_DTL = new global::System.Data.DataRelation("PART_LIST_HDR_PART_LIST_DTL", new global::System.Data.DataColumn[] {
                        this.tablePART_LIST_HDR.LOADING_NOColumn,
                        this.tablePART_LIST_HDR.CUSTOMERColumn}, new global::System.Data.DataColumn[] {
                        this.tablePART_LIST_DTL.LOADING_NOColumn,
                        this.tablePART_LIST_DTL.CUSTOMERColumn}, false);
            this.Relations.Add(this.relationPART_LIST_HDR_PART_LIST_DTL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePART_LIST_HDR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePART_LIST_DTL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DTS_PARTLIST_IN_PALLET ds = new DTS_PARTLIST_IN_PALLET();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void PART_LIST_HDRRowChangeEventHandler(object sender, PART_LIST_HDRRowChangeEvent e);
        
        public delegate void PART_LIST_DTLRowChangeEventHandler(object sender, PART_LIST_DTLRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PART_LIST_HDRDataTable : global::System.Data.TypedTableBase<PART_LIST_HDRRow> {
            
            private global::System.Data.DataColumn columnLOADING_NO;
            
            private global::System.Data.DataColumn columnDELIVERY_DATE;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnPREPARE_BY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PART_LIST_HDRDataTable() {
                this.TableName = "PART_LIST_HDR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PART_LIST_HDRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PART_LIST_HDRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOADING_NOColumn {
                get {
                    return this.columnLOADING_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DELIVERY_DATEColumn {
                get {
                    return this.columnDELIVERY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PREPARE_BYColumn {
                get {
                    return this.columnPREPARE_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PART_LIST_HDRRow this[int index] {
                get {
                    return ((PART_LIST_HDRRow)(this.Rows[index]));
                }
            }
            
            public event PART_LIST_HDRRowChangeEventHandler PART_LIST_HDRRowChanging;
            
            public event PART_LIST_HDRRowChangeEventHandler PART_LIST_HDRRowChanged;
            
            public event PART_LIST_HDRRowChangeEventHandler PART_LIST_HDRRowDeleting;
            
            public event PART_LIST_HDRRowChangeEventHandler PART_LIST_HDRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPART_LIST_HDRRow(PART_LIST_HDRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PART_LIST_HDRRow AddPART_LIST_HDRRow(string LOADING_NO, string DELIVERY_DATE, string CUSTOMER, string PREPARE_BY) {
                PART_LIST_HDRRow rowPART_LIST_HDRRow = ((PART_LIST_HDRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LOADING_NO,
                        DELIVERY_DATE,
                        CUSTOMER,
                        PREPARE_BY};
                rowPART_LIST_HDRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPART_LIST_HDRRow);
                return rowPART_LIST_HDRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PART_LIST_HDRDataTable cln = ((PART_LIST_HDRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PART_LIST_HDRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLOADING_NO = base.Columns["LOADING_NO"];
                this.columnDELIVERY_DATE = base.Columns["DELIVERY_DATE"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnPREPARE_BY = base.Columns["PREPARE_BY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLOADING_NO = new global::System.Data.DataColumn("LOADING_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADING_NO);
                this.columnDELIVERY_DATE = new global::System.Data.DataColumn("DELIVERY_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDELIVERY_DATE);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnPREPARE_BY = new global::System.Data.DataColumn("PREPARE_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPARE_BY);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PART_LIST_HDRRow NewPART_LIST_HDRRow() {
                return ((PART_LIST_HDRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PART_LIST_HDRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PART_LIST_HDRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PART_LIST_HDRRowChanged != null)) {
                    this.PART_LIST_HDRRowChanged(this, new PART_LIST_HDRRowChangeEvent(((PART_LIST_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PART_LIST_HDRRowChanging != null)) {
                    this.PART_LIST_HDRRowChanging(this, new PART_LIST_HDRRowChangeEvent(((PART_LIST_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PART_LIST_HDRRowDeleted != null)) {
                    this.PART_LIST_HDRRowDeleted(this, new PART_LIST_HDRRowChangeEvent(((PART_LIST_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PART_LIST_HDRRowDeleting != null)) {
                    this.PART_LIST_HDRRowDeleting(this, new PART_LIST_HDRRowChangeEvent(((PART_LIST_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePART_LIST_HDRRow(PART_LIST_HDRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DTS_PARTLIST_IN_PALLET ds = new DTS_PARTLIST_IN_PALLET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PART_LIST_HDRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PART_LIST_DTLDataTable : global::System.Data.TypedTableBase<PART_LIST_DTLRow> {
            
            private global::System.Data.DataColumn columnLOADING_NO;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnSO_NO;
            
            private global::System.Data.DataColumn columnREF_NO;
            
            private global::System.Data.DataColumn columnPRODUCT_NO;
            
            private global::System.Data.DataColumn columnPROD_SEQ;
            
            private global::System.Data.DataColumn columnASSIGN;
            
            private global::System.Data.DataColumn columnINJT;
            
            private global::System.Data.DataColumn columnTRIM;
            
            private global::System.Data.DataColumn columnELEC;
            
            private global::System.Data.DataColumn columnPQC;
            
            private global::System.Data.DataColumn columnQC;
            
            private global::System.Data.DataColumn columnFG;
            
            private global::System.Data.DataColumn columnQTY;
            
            private global::System.Data.DataColumn columnno_of_box;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PART_LIST_DTLDataTable() {
                this.TableName = "PART_LIST_DTL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PART_LIST_DTLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PART_LIST_DTLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOADING_NOColumn {
                get {
                    return this.columnLOADING_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_NOColumn {
                get {
                    return this.columnSO_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REF_NOColumn {
                get {
                    return this.columnREF_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NOColumn {
                get {
                    return this.columnPRODUCT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROD_SEQColumn {
                get {
                    return this.columnPROD_SEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASSIGNColumn {
                get {
                    return this.columnASSIGN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INJTColumn {
                get {
                    return this.columnINJT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRIMColumn {
                get {
                    return this.columnTRIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELECColumn {
                get {
                    return this.columnELEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PQCColumn {
                get {
                    return this.columnPQC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QCColumn {
                get {
                    return this.columnQC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FGColumn {
                get {
                    return this.columnFG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTYColumn {
                get {
                    return this.columnQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn no_of_boxColumn {
                get {
                    return this.columnno_of_box;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PART_LIST_DTLRow this[int index] {
                get {
                    return ((PART_LIST_DTLRow)(this.Rows[index]));
                }
            }
            
            public event PART_LIST_DTLRowChangeEventHandler PART_LIST_DTLRowChanging;
            
            public event PART_LIST_DTLRowChangeEventHandler PART_LIST_DTLRowChanged;
            
            public event PART_LIST_DTLRowChangeEventHandler PART_LIST_DTLRowDeleting;
            
            public event PART_LIST_DTLRowChangeEventHandler PART_LIST_DTLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPART_LIST_DTLRow(PART_LIST_DTLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PART_LIST_DTLRow AddPART_LIST_DTLRow(string LOADING_NO, string CUSTOMER, string SO_NO, string REF_NO, string PRODUCT_NO, string PROD_SEQ, string ASSIGN, string INJT, string TRIM, string ELEC, string PQC, string QC, string FG, string QTY, string no_of_box) {
                PART_LIST_DTLRow rowPART_LIST_DTLRow = ((PART_LIST_DTLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LOADING_NO,
                        CUSTOMER,
                        SO_NO,
                        REF_NO,
                        PRODUCT_NO,
                        PROD_SEQ,
                        ASSIGN,
                        INJT,
                        TRIM,
                        ELEC,
                        PQC,
                        QC,
                        FG,
                        QTY,
                        no_of_box};
                rowPART_LIST_DTLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPART_LIST_DTLRow);
                return rowPART_LIST_DTLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PART_LIST_DTLDataTable cln = ((PART_LIST_DTLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PART_LIST_DTLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLOADING_NO = base.Columns["LOADING_NO"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnSO_NO = base.Columns["SO_NO"];
                this.columnREF_NO = base.Columns["REF_NO"];
                this.columnPRODUCT_NO = base.Columns["PRODUCT_NO"];
                this.columnPROD_SEQ = base.Columns["PROD_SEQ"];
                this.columnASSIGN = base.Columns["ASSIGN"];
                this.columnINJT = base.Columns["INJT"];
                this.columnTRIM = base.Columns["TRIM"];
                this.columnELEC = base.Columns["ELEC"];
                this.columnPQC = base.Columns["PQC"];
                this.columnQC = base.Columns["QC"];
                this.columnFG = base.Columns["FG"];
                this.columnQTY = base.Columns["QTY"];
                this.columnno_of_box = base.Columns["no_of_box"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLOADING_NO = new global::System.Data.DataColumn("LOADING_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADING_NO);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnSO_NO = new global::System.Data.DataColumn("SO_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_NO);
                this.columnREF_NO = new global::System.Data.DataColumn("REF_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_NO);
                this.columnPRODUCT_NO = new global::System.Data.DataColumn("PRODUCT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NO);
                this.columnPROD_SEQ = new global::System.Data.DataColumn("PROD_SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_SEQ);
                this.columnASSIGN = new global::System.Data.DataColumn("ASSIGN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASSIGN);
                this.columnINJT = new global::System.Data.DataColumn("INJT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINJT);
                this.columnTRIM = new global::System.Data.DataColumn("TRIM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRIM);
                this.columnELEC = new global::System.Data.DataColumn("ELEC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELEC);
                this.columnPQC = new global::System.Data.DataColumn("PQC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPQC);
                this.columnQC = new global::System.Data.DataColumn("QC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQC);
                this.columnFG = new global::System.Data.DataColumn("FG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFG);
                this.columnQTY = new global::System.Data.DataColumn("QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY);
                this.columnno_of_box = new global::System.Data.DataColumn("no_of_box", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnno_of_box);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PART_LIST_DTLRow NewPART_LIST_DTLRow() {
                return ((PART_LIST_DTLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PART_LIST_DTLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PART_LIST_DTLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PART_LIST_DTLRowChanged != null)) {
                    this.PART_LIST_DTLRowChanged(this, new PART_LIST_DTLRowChangeEvent(((PART_LIST_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PART_LIST_DTLRowChanging != null)) {
                    this.PART_LIST_DTLRowChanging(this, new PART_LIST_DTLRowChangeEvent(((PART_LIST_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PART_LIST_DTLRowDeleted != null)) {
                    this.PART_LIST_DTLRowDeleted(this, new PART_LIST_DTLRowChangeEvent(((PART_LIST_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PART_LIST_DTLRowDeleting != null)) {
                    this.PART_LIST_DTLRowDeleting(this, new PART_LIST_DTLRowChangeEvent(((PART_LIST_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePART_LIST_DTLRow(PART_LIST_DTLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DTS_PARTLIST_IN_PALLET ds = new DTS_PARTLIST_IN_PALLET();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PART_LIST_DTLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PART_LIST_HDRRow : global::System.Data.DataRow {
            
            private PART_LIST_HDRDataTable tablePART_LIST_HDR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PART_LIST_HDRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePART_LIST_HDR = ((PART_LIST_HDRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOADING_NO {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_HDR.LOADING_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADING_NO\' in table \'PART_LIST_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_HDR.LOADING_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DELIVERY_DATE {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_HDR.DELIVERY_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DELIVERY_DATE\' in table \'PART_LIST_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_HDR.DELIVERY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_HDR.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'PART_LIST_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_HDR.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PREPARE_BY {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_HDR.PREPARE_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PREPARE_BY\' in table \'PART_LIST_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_HDR.PREPARE_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOADING_NONull() {
                return this.IsNull(this.tablePART_LIST_HDR.LOADING_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOADING_NONull() {
                this[this.tablePART_LIST_HDR.LOADING_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDELIVERY_DATENull() {
                return this.IsNull(this.tablePART_LIST_HDR.DELIVERY_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDELIVERY_DATENull() {
                this[this.tablePART_LIST_HDR.DELIVERY_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tablePART_LIST_HDR.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMERNull() {
                this[this.tablePART_LIST_HDR.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPREPARE_BYNull() {
                return this.IsNull(this.tablePART_LIST_HDR.PREPARE_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPREPARE_BYNull() {
                this[this.tablePART_LIST_HDR.PREPARE_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PART_LIST_DTLRow[] GetPART_LIST_DTLRows() {
                if ((this.Table.ChildRelations["PART_LIST_HDR_PART_LIST_DTL"] == null)) {
                    return new PART_LIST_DTLRow[0];
                }
                else {
                    return ((PART_LIST_DTLRow[])(base.GetChildRows(this.Table.ChildRelations["PART_LIST_HDR_PART_LIST_DTL"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PART_LIST_DTLRow : global::System.Data.DataRow {
            
            private PART_LIST_DTLDataTable tablePART_LIST_DTL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PART_LIST_DTLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePART_LIST_DTL = ((PART_LIST_DTLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOADING_NO {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_DTL.LOADING_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADING_NO\' in table \'PART_LIST_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_DTL.LOADING_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_DTL.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'PART_LIST_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_DTL.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SO_NO {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_DTL.SO_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SO_NO\' in table \'PART_LIST_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_DTL.SO_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF_NO {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_DTL.REF_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REF_NO\' in table \'PART_LIST_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_DTL.REF_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NO {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_DTL.PRODUCT_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_NO\' in table \'PART_LIST_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_DTL.PRODUCT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROD_SEQ {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_DTL.PROD_SEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROD_SEQ\' in table \'PART_LIST_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_DTL.PROD_SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASSIGN {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_DTL.ASSIGNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASSIGN\' in table \'PART_LIST_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_DTL.ASSIGNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INJT {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_DTL.INJTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INJT\' in table \'PART_LIST_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_DTL.INJTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRIM {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_DTL.TRIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRIM\' in table \'PART_LIST_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_DTL.TRIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ELEC {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_DTL.ELECColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ELEC\' in table \'PART_LIST_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_DTL.ELECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PQC {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_DTL.PQCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PQC\' in table \'PART_LIST_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_DTL.PQCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QC {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_DTL.QCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QC\' in table \'PART_LIST_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_DTL.QCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FG {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_DTL.FGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FG\' in table \'PART_LIST_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_DTL.FGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QTY {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_DTL.QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QTY\' in table \'PART_LIST_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_DTL.QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string no_of_box {
                get {
                    try {
                        return ((string)(this[this.tablePART_LIST_DTL.no_of_boxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'no_of_box\' in table \'PART_LIST_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePART_LIST_DTL.no_of_boxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PART_LIST_HDRRow PART_LIST_HDRRowParent {
                get {
                    return ((PART_LIST_HDRRow)(this.GetParentRow(this.Table.ParentRelations["PART_LIST_HDR_PART_LIST_DTL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PART_LIST_HDR_PART_LIST_DTL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOADING_NONull() {
                return this.IsNull(this.tablePART_LIST_DTL.LOADING_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOADING_NONull() {
                this[this.tablePART_LIST_DTL.LOADING_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tablePART_LIST_DTL.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMERNull() {
                this[this.tablePART_LIST_DTL.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_NONull() {
                return this.IsNull(this.tablePART_LIST_DTL.SO_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_NONull() {
                this[this.tablePART_LIST_DTL.SO_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREF_NONull() {
                return this.IsNull(this.tablePART_LIST_DTL.REF_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREF_NONull() {
                this[this.tablePART_LIST_DTL.REF_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_NONull() {
                return this.IsNull(this.tablePART_LIST_DTL.PRODUCT_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_NONull() {
                this[this.tablePART_LIST_DTL.PRODUCT_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROD_SEQNull() {
                return this.IsNull(this.tablePART_LIST_DTL.PROD_SEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROD_SEQNull() {
                this[this.tablePART_LIST_DTL.PROD_SEQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASSIGNNull() {
                return this.IsNull(this.tablePART_LIST_DTL.ASSIGNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASSIGNNull() {
                this[this.tablePART_LIST_DTL.ASSIGNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINJTNull() {
                return this.IsNull(this.tablePART_LIST_DTL.INJTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINJTNull() {
                this[this.tablePART_LIST_DTL.INJTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRIMNull() {
                return this.IsNull(this.tablePART_LIST_DTL.TRIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRIMNull() {
                this[this.tablePART_LIST_DTL.TRIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELECNull() {
                return this.IsNull(this.tablePART_LIST_DTL.ELECColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELECNull() {
                this[this.tablePART_LIST_DTL.ELECColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPQCNull() {
                return this.IsNull(this.tablePART_LIST_DTL.PQCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPQCNull() {
                this[this.tablePART_LIST_DTL.PQCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQCNull() {
                return this.IsNull(this.tablePART_LIST_DTL.QCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQCNull() {
                this[this.tablePART_LIST_DTL.QCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFGNull() {
                return this.IsNull(this.tablePART_LIST_DTL.FGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFGNull() {
                this[this.tablePART_LIST_DTL.FGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTYNull() {
                return this.IsNull(this.tablePART_LIST_DTL.QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTYNull() {
                this[this.tablePART_LIST_DTL.QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isno_of_boxNull() {
                return this.IsNull(this.tablePART_LIST_DTL.no_of_boxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setno_of_boxNull() {
                this[this.tablePART_LIST_DTL.no_of_boxColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PART_LIST_HDRRowChangeEvent : global::System.EventArgs {
            
            private PART_LIST_HDRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PART_LIST_HDRRowChangeEvent(PART_LIST_HDRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PART_LIST_HDRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PART_LIST_DTLRowChangeEvent : global::System.EventArgs {
            
            private PART_LIST_DTLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PART_LIST_DTLRowChangeEvent(PART_LIST_DTLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PART_LIST_DTLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591