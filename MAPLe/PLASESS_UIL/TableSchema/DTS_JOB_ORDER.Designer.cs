//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace HTN.BITS.UIL.PLASESS.TableSchema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DTS_JOB_ORDER")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DTS_JOB_ORDER : global::System.Data.DataSet {
        
        private T_JOB_ORDERDataTable tableT_JOB_ORDER;
        
        private T_JOB_LOTDataTable tableT_JOB_LOT;
        
        private global::System.Data.DataRelation relationT_JOB_ORDER_T_JOB_LOT;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DTS_JOB_ORDER() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DTS_JOB_ORDER(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_JOB_ORDER"] != null)) {
                    base.Tables.Add(new T_JOB_ORDERDataTable(ds.Tables["T_JOB_ORDER"]));
                }
                if ((ds.Tables["T_JOB_LOT"] != null)) {
                    base.Tables.Add(new T_JOB_LOTDataTable(ds.Tables["T_JOB_LOT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_JOB_ORDERDataTable T_JOB_ORDER {
            get {
                return this.tableT_JOB_ORDER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_JOB_LOTDataTable T_JOB_LOT {
            get {
                return this.tableT_JOB_LOT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DTS_JOB_ORDER cln = ((DTS_JOB_ORDER)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["T_JOB_ORDER"] != null)) {
                    base.Tables.Add(new T_JOB_ORDERDataTable(ds.Tables["T_JOB_ORDER"]));
                }
                if ((ds.Tables["T_JOB_LOT"] != null)) {
                    base.Tables.Add(new T_JOB_LOTDataTable(ds.Tables["T_JOB_LOT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableT_JOB_ORDER = ((T_JOB_ORDERDataTable)(base.Tables["T_JOB_ORDER"]));
            if ((initTable == true)) {
                if ((this.tableT_JOB_ORDER != null)) {
                    this.tableT_JOB_ORDER.InitVars();
                }
            }
            this.tableT_JOB_LOT = ((T_JOB_LOTDataTable)(base.Tables["T_JOB_LOT"]));
            if ((initTable == true)) {
                if ((this.tableT_JOB_LOT != null)) {
                    this.tableT_JOB_LOT.InitVars();
                }
            }
            this.relationT_JOB_ORDER_T_JOB_LOT = this.Relations["T_JOB_ORDER_T_JOB_LOT"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DTS_JOB_ORDER";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DTS_JOB_ORDER.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableT_JOB_ORDER = new T_JOB_ORDERDataTable();
            base.Tables.Add(this.tableT_JOB_ORDER);
            this.tableT_JOB_LOT = new T_JOB_LOTDataTable();
            base.Tables.Add(this.tableT_JOB_LOT);
            this.relationT_JOB_ORDER_T_JOB_LOT = new global::System.Data.DataRelation("T_JOB_ORDER_T_JOB_LOT", new global::System.Data.DataColumn[] {
                        this.tableT_JOB_ORDER.JOB_NOColumn,
                        this.tableT_JOB_ORDER.SHIFT_DATEColumn,
                        this.tableT_JOB_ORDER.SHIFTColumn}, new global::System.Data.DataColumn[] {
                        this.tableT_JOB_LOT.JOB_NOColumn,
                        this.tableT_JOB_LOT.PLAN_DATEColumn,
                        this.tableT_JOB_LOT.SHIFTColumn}, false);
            this.Relations.Add(this.relationT_JOB_ORDER_T_JOB_LOT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_JOB_ORDER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_JOB_LOT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DTS_JOB_ORDER ds = new DTS_JOB_ORDER();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void T_JOB_ORDERRowChangeEventHandler(object sender, T_JOB_ORDERRowChangeEvent e);
        
        public delegate void T_JOB_LOTRowChangeEventHandler(object sender, T_JOB_LOTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_JOB_ORDERDataTable : global::System.Data.TypedTableBase<T_JOB_ORDERRow> {
            
            private global::System.Data.DataColumn columnJOB_NO;
            
            private global::System.Data.DataColumn columnPRODUCTION_TYPE;
            
            private global::System.Data.DataColumn columnREF_NO;
            
            private global::System.Data.DataColumn columnPLAN_DATE;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnPROD_SEQ_NO;
            
            private global::System.Data.DataColumn columnPRODUCT_NO;
            
            private global::System.Data.DataColumn columnPRODUCT_NAME;
            
            private global::System.Data.DataColumn columnMTL_TYPE;
            
            private global::System.Data.DataColumn columnMC_NO;
            
            private global::System.Data.DataColumn columnMP_START_DATE;
            
            private global::System.Data.DataColumn columnMP_STOP_DATE;
            
            private global::System.Data.DataColumn columnPLAN_QTY;
            
            private global::System.Data.DataColumn columnUNIT_ID;
            
            private global::System.Data.DataColumn columnBARCODE;
            
            private global::System.Data.DataColumn columnSHIFT_DATE;
            
            private global::System.Data.DataColumn columnSHIFT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOB_ORDERDataTable() {
                this.TableName = "T_JOB_ORDER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_JOB_ORDERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_JOB_ORDERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JOB_NOColumn {
                get {
                    return this.columnJOB_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCTION_TYPEColumn {
                get {
                    return this.columnPRODUCTION_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REF_NOColumn {
                get {
                    return this.columnREF_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PLAN_DATEColumn {
                get {
                    return this.columnPLAN_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROD_SEQ_NOColumn {
                get {
                    return this.columnPROD_SEQ_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NOColumn {
                get {
                    return this.columnPRODUCT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NAMEColumn {
                get {
                    return this.columnPRODUCT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MTL_TYPEColumn {
                get {
                    return this.columnMTL_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MC_NOColumn {
                get {
                    return this.columnMC_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_START_DATEColumn {
                get {
                    return this.columnMP_START_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_STOP_DATEColumn {
                get {
                    return this.columnMP_STOP_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PLAN_QTYColumn {
                get {
                    return this.columnPLAN_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNIT_IDColumn {
                get {
                    return this.columnUNIT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BARCODEColumn {
                get {
                    return this.columnBARCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIFT_DATEColumn {
                get {
                    return this.columnSHIFT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIFTColumn {
                get {
                    return this.columnSHIFT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOB_ORDERRow this[int index] {
                get {
                    return ((T_JOB_ORDERRow)(this.Rows[index]));
                }
            }
            
            public event T_JOB_ORDERRowChangeEventHandler T_JOB_ORDERRowChanging;
            
            public event T_JOB_ORDERRowChangeEventHandler T_JOB_ORDERRowChanged;
            
            public event T_JOB_ORDERRowChangeEventHandler T_JOB_ORDERRowDeleting;
            
            public event T_JOB_ORDERRowChangeEventHandler T_JOB_ORDERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_JOB_ORDERRow(T_JOB_ORDERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOB_ORDERRow AddT_JOB_ORDERRow(
                        string JOB_NO, 
                        string PRODUCTION_TYPE, 
                        string REF_NO, 
                        string PLAN_DATE, 
                        string CUSTOMER, 
                        string PROD_SEQ_NO, 
                        string PRODUCT_NO, 
                        string PRODUCT_NAME, 
                        string MTL_TYPE, 
                        string MC_NO, 
                        string MP_START_DATE, 
                        string MP_STOP_DATE, 
                        string PLAN_QTY, 
                        string UNIT_ID, 
                        System.Drawing.Bitmap BARCODE, 
                        string SHIFT_DATE, 
                        string SHIFT) {
                T_JOB_ORDERRow rowT_JOB_ORDERRow = ((T_JOB_ORDERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JOB_NO,
                        PRODUCTION_TYPE,
                        REF_NO,
                        PLAN_DATE,
                        CUSTOMER,
                        PROD_SEQ_NO,
                        PRODUCT_NO,
                        PRODUCT_NAME,
                        MTL_TYPE,
                        MC_NO,
                        MP_START_DATE,
                        MP_STOP_DATE,
                        PLAN_QTY,
                        UNIT_ID,
                        BARCODE,
                        SHIFT_DATE,
                        SHIFT};
                rowT_JOB_ORDERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_JOB_ORDERRow);
                return rowT_JOB_ORDERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_JOB_ORDERDataTable cln = ((T_JOB_ORDERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_JOB_ORDERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJOB_NO = base.Columns["JOB_NO"];
                this.columnPRODUCTION_TYPE = base.Columns["PRODUCTION_TYPE"];
                this.columnREF_NO = base.Columns["REF_NO"];
                this.columnPLAN_DATE = base.Columns["PLAN_DATE"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnPROD_SEQ_NO = base.Columns["PROD_SEQ_NO"];
                this.columnPRODUCT_NO = base.Columns["PRODUCT_NO"];
                this.columnPRODUCT_NAME = base.Columns["PRODUCT_NAME"];
                this.columnMTL_TYPE = base.Columns["MTL_TYPE"];
                this.columnMC_NO = base.Columns["MC_NO"];
                this.columnMP_START_DATE = base.Columns["MP_START_DATE"];
                this.columnMP_STOP_DATE = base.Columns["MP_STOP_DATE"];
                this.columnPLAN_QTY = base.Columns["PLAN_QTY"];
                this.columnUNIT_ID = base.Columns["UNIT_ID"];
                this.columnBARCODE = base.Columns["BARCODE"];
                this.columnSHIFT_DATE = base.Columns["SHIFT_DATE"];
                this.columnSHIFT = base.Columns["SHIFT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJOB_NO = new global::System.Data.DataColumn("JOB_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_NO);
                this.columnPRODUCTION_TYPE = new global::System.Data.DataColumn("PRODUCTION_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCTION_TYPE);
                this.columnREF_NO = new global::System.Data.DataColumn("REF_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_NO);
                this.columnPLAN_DATE = new global::System.Data.DataColumn("PLAN_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLAN_DATE);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnPROD_SEQ_NO = new global::System.Data.DataColumn("PROD_SEQ_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_SEQ_NO);
                this.columnPRODUCT_NO = new global::System.Data.DataColumn("PRODUCT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NO);
                this.columnPRODUCT_NAME = new global::System.Data.DataColumn("PRODUCT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NAME);
                this.columnMTL_TYPE = new global::System.Data.DataColumn("MTL_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTL_TYPE);
                this.columnMC_NO = new global::System.Data.DataColumn("MC_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMC_NO);
                this.columnMP_START_DATE = new global::System.Data.DataColumn("MP_START_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_START_DATE);
                this.columnMP_STOP_DATE = new global::System.Data.DataColumn("MP_STOP_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_STOP_DATE);
                this.columnPLAN_QTY = new global::System.Data.DataColumn("PLAN_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLAN_QTY);
                this.columnUNIT_ID = new global::System.Data.DataColumn("UNIT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_ID);
                this.columnBARCODE = new global::System.Data.DataColumn("BARCODE", typeof(global::System.Drawing.Bitmap), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBARCODE);
                this.columnSHIFT_DATE = new global::System.Data.DataColumn("SHIFT_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIFT_DATE);
                this.columnSHIFT = new global::System.Data.DataColumn("SHIFT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIFT);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOB_ORDERRow NewT_JOB_ORDERRow() {
                return ((T_JOB_ORDERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_JOB_ORDERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_JOB_ORDERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_JOB_ORDERRowChanged != null)) {
                    this.T_JOB_ORDERRowChanged(this, new T_JOB_ORDERRowChangeEvent(((T_JOB_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_JOB_ORDERRowChanging != null)) {
                    this.T_JOB_ORDERRowChanging(this, new T_JOB_ORDERRowChangeEvent(((T_JOB_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_JOB_ORDERRowDeleted != null)) {
                    this.T_JOB_ORDERRowDeleted(this, new T_JOB_ORDERRowChangeEvent(((T_JOB_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_JOB_ORDERRowDeleting != null)) {
                    this.T_JOB_ORDERRowDeleting(this, new T_JOB_ORDERRowChangeEvent(((T_JOB_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_JOB_ORDERRow(T_JOB_ORDERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DTS_JOB_ORDER ds = new DTS_JOB_ORDER();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_JOB_ORDERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_JOB_LOTDataTable : global::System.Data.TypedTableBase<T_JOB_LOTRow> {
            
            private global::System.Data.DataColumn columnJOB_NO;
            
            private global::System.Data.DataColumn columnLINE_NO;
            
            private global::System.Data.DataColumn columnPLAN_DATE;
            
            private global::System.Data.DataColumn columnSHIFT;
            
            private global::System.Data.DataColumn columnJOB_LOT;
            
            private global::System.Data.DataColumn columnNO_OF_LABEL;
            
            private global::System.Data.DataColumn columnLABEL_QTY;
            
            private global::System.Data.DataColumn columnTOTAL_QTY;
            
            private global::System.Data.DataColumn columnUNIT_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOB_LOTDataTable() {
                this.TableName = "T_JOB_LOT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_JOB_LOTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_JOB_LOTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JOB_NOColumn {
                get {
                    return this.columnJOB_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LINE_NOColumn {
                get {
                    return this.columnLINE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PLAN_DATEColumn {
                get {
                    return this.columnPLAN_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIFTColumn {
                get {
                    return this.columnSHIFT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JOB_LOTColumn {
                get {
                    return this.columnJOB_LOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NO_OF_LABELColumn {
                get {
                    return this.columnNO_OF_LABEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LABEL_QTYColumn {
                get {
                    return this.columnLABEL_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TOTAL_QTYColumn {
                get {
                    return this.columnTOTAL_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNIT_IDColumn {
                get {
                    return this.columnUNIT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOB_LOTRow this[int index] {
                get {
                    return ((T_JOB_LOTRow)(this.Rows[index]));
                }
            }
            
            public event T_JOB_LOTRowChangeEventHandler T_JOB_LOTRowChanging;
            
            public event T_JOB_LOTRowChangeEventHandler T_JOB_LOTRowChanged;
            
            public event T_JOB_LOTRowChangeEventHandler T_JOB_LOTRowDeleting;
            
            public event T_JOB_LOTRowChangeEventHandler T_JOB_LOTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_JOB_LOTRow(T_JOB_LOTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOB_LOTRow AddT_JOB_LOTRow(string JOB_NO, string LINE_NO, string PLAN_DATE, string SHIFT, string JOB_LOT, string NO_OF_LABEL, string LABEL_QTY, string TOTAL_QTY, string UNIT_ID) {
                T_JOB_LOTRow rowT_JOB_LOTRow = ((T_JOB_LOTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JOB_NO,
                        LINE_NO,
                        PLAN_DATE,
                        SHIFT,
                        JOB_LOT,
                        NO_OF_LABEL,
                        LABEL_QTY,
                        TOTAL_QTY,
                        UNIT_ID};
                rowT_JOB_LOTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_JOB_LOTRow);
                return rowT_JOB_LOTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_JOB_LOTDataTable cln = ((T_JOB_LOTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_JOB_LOTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJOB_NO = base.Columns["JOB_NO"];
                this.columnLINE_NO = base.Columns["LINE_NO"];
                this.columnPLAN_DATE = base.Columns["PLAN_DATE"];
                this.columnSHIFT = base.Columns["SHIFT"];
                this.columnJOB_LOT = base.Columns["JOB_LOT"];
                this.columnNO_OF_LABEL = base.Columns["NO_OF_LABEL"];
                this.columnLABEL_QTY = base.Columns["LABEL_QTY"];
                this.columnTOTAL_QTY = base.Columns["TOTAL_QTY"];
                this.columnUNIT_ID = base.Columns["UNIT_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJOB_NO = new global::System.Data.DataColumn("JOB_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_NO);
                this.columnLINE_NO = new global::System.Data.DataColumn("LINE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLINE_NO);
                this.columnPLAN_DATE = new global::System.Data.DataColumn("PLAN_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLAN_DATE);
                this.columnSHIFT = new global::System.Data.DataColumn("SHIFT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIFT);
                this.columnJOB_LOT = new global::System.Data.DataColumn("JOB_LOT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_LOT);
                this.columnNO_OF_LABEL = new global::System.Data.DataColumn("NO_OF_LABEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO_OF_LABEL);
                this.columnLABEL_QTY = new global::System.Data.DataColumn("LABEL_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLABEL_QTY);
                this.columnTOTAL_QTY = new global::System.Data.DataColumn("TOTAL_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_QTY);
                this.columnUNIT_ID = new global::System.Data.DataColumn("UNIT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_ID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOB_LOTRow NewT_JOB_LOTRow() {
                return ((T_JOB_LOTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_JOB_LOTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_JOB_LOTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_JOB_LOTRowChanged != null)) {
                    this.T_JOB_LOTRowChanged(this, new T_JOB_LOTRowChangeEvent(((T_JOB_LOTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_JOB_LOTRowChanging != null)) {
                    this.T_JOB_LOTRowChanging(this, new T_JOB_LOTRowChangeEvent(((T_JOB_LOTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_JOB_LOTRowDeleted != null)) {
                    this.T_JOB_LOTRowDeleted(this, new T_JOB_LOTRowChangeEvent(((T_JOB_LOTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_JOB_LOTRowDeleting != null)) {
                    this.T_JOB_LOTRowDeleting(this, new T_JOB_LOTRowChangeEvent(((T_JOB_LOTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_JOB_LOTRow(T_JOB_LOTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DTS_JOB_ORDER ds = new DTS_JOB_ORDER();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_JOB_LOTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_JOB_ORDERRow : global::System.Data.DataRow {
            
            private T_JOB_ORDERDataTable tableT_JOB_ORDER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_JOB_ORDERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_JOB_ORDER = ((T_JOB_ORDERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JOB_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.JOB_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JOB_NO\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.JOB_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCTION_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.PRODUCTION_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCTION_TYPE\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.PRODUCTION_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.REF_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REF_NO\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.REF_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PLAN_DATE {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.PLAN_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PLAN_DATE\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.PLAN_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROD_SEQ_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.PROD_SEQ_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROD_SEQ_NO\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.PROD_SEQ_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.PRODUCT_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_NO\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.PRODUCT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.PRODUCT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_NAME\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.PRODUCT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MTL_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.MTL_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTL_TYPE\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.MTL_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MC_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.MC_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MC_NO\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.MC_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MP_START_DATE {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.MP_START_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MP_START_DATE\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.MP_START_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MP_STOP_DATE {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.MP_STOP_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MP_STOP_DATE\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.MP_STOP_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PLAN_QTY {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.PLAN_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PLAN_QTY\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.PLAN_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNIT_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.UNIT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIT_ID\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.UNIT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Bitmap BARCODE {
                get {
                    try {
                        return ((global::System.Drawing.Bitmap)(this[this.tableT_JOB_ORDER.BARCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BARCODE\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.BARCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIFT_DATE {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.SHIFT_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHIFT_DATE\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.SHIFT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIFT {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_ORDER.SHIFTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHIFT\' in table \'T_JOB_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_ORDER.SHIFTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJOB_NONull() {
                return this.IsNull(this.tableT_JOB_ORDER.JOB_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJOB_NONull() {
                this[this.tableT_JOB_ORDER.JOB_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCTION_TYPENull() {
                return this.IsNull(this.tableT_JOB_ORDER.PRODUCTION_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCTION_TYPENull() {
                this[this.tableT_JOB_ORDER.PRODUCTION_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREF_NONull() {
                return this.IsNull(this.tableT_JOB_ORDER.REF_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREF_NONull() {
                this[this.tableT_JOB_ORDER.REF_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPLAN_DATENull() {
                return this.IsNull(this.tableT_JOB_ORDER.PLAN_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPLAN_DATENull() {
                this[this.tableT_JOB_ORDER.PLAN_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tableT_JOB_ORDER.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMERNull() {
                this[this.tableT_JOB_ORDER.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROD_SEQ_NONull() {
                return this.IsNull(this.tableT_JOB_ORDER.PROD_SEQ_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROD_SEQ_NONull() {
                this[this.tableT_JOB_ORDER.PROD_SEQ_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_NONull() {
                return this.IsNull(this.tableT_JOB_ORDER.PRODUCT_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_NONull() {
                this[this.tableT_JOB_ORDER.PRODUCT_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_NAMENull() {
                return this.IsNull(this.tableT_JOB_ORDER.PRODUCT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_NAMENull() {
                this[this.tableT_JOB_ORDER.PRODUCT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMTL_TYPENull() {
                return this.IsNull(this.tableT_JOB_ORDER.MTL_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMTL_TYPENull() {
                this[this.tableT_JOB_ORDER.MTL_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMC_NONull() {
                return this.IsNull(this.tableT_JOB_ORDER.MC_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMC_NONull() {
                this[this.tableT_JOB_ORDER.MC_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_START_DATENull() {
                return this.IsNull(this.tableT_JOB_ORDER.MP_START_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_START_DATENull() {
                this[this.tableT_JOB_ORDER.MP_START_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_STOP_DATENull() {
                return this.IsNull(this.tableT_JOB_ORDER.MP_STOP_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_STOP_DATENull() {
                this[this.tableT_JOB_ORDER.MP_STOP_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPLAN_QTYNull() {
                return this.IsNull(this.tableT_JOB_ORDER.PLAN_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPLAN_QTYNull() {
                this[this.tableT_JOB_ORDER.PLAN_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNIT_IDNull() {
                return this.IsNull(this.tableT_JOB_ORDER.UNIT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNIT_IDNull() {
                this[this.tableT_JOB_ORDER.UNIT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBARCODENull() {
                return this.IsNull(this.tableT_JOB_ORDER.BARCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBARCODENull() {
                this[this.tableT_JOB_ORDER.BARCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIFT_DATENull() {
                return this.IsNull(this.tableT_JOB_ORDER.SHIFT_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIFT_DATENull() {
                this[this.tableT_JOB_ORDER.SHIFT_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIFTNull() {
                return this.IsNull(this.tableT_JOB_ORDER.SHIFTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIFTNull() {
                this[this.tableT_JOB_ORDER.SHIFTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOB_LOTRow[] GetT_JOB_LOTRows() {
                if ((this.Table.ChildRelations["T_JOB_ORDER_T_JOB_LOT"] == null)) {
                    return new T_JOB_LOTRow[0];
                }
                else {
                    return ((T_JOB_LOTRow[])(base.GetChildRows(this.Table.ChildRelations["T_JOB_ORDER_T_JOB_LOT"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_JOB_LOTRow : global::System.Data.DataRow {
            
            private T_JOB_LOTDataTable tableT_JOB_LOT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_JOB_LOTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_JOB_LOT = ((T_JOB_LOTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JOB_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_LOT.JOB_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JOB_NO\' in table \'T_JOB_LOT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_LOT.JOB_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LINE_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_LOT.LINE_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LINE_NO\' in table \'T_JOB_LOT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_LOT.LINE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PLAN_DATE {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_LOT.PLAN_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PLAN_DATE\' in table \'T_JOB_LOT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_LOT.PLAN_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIFT {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_LOT.SHIFTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHIFT\' in table \'T_JOB_LOT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_LOT.SHIFTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JOB_LOT {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_LOT.JOB_LOTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JOB_LOT\' in table \'T_JOB_LOT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_LOT.JOB_LOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NO_OF_LABEL {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_LOT.NO_OF_LABELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NO_OF_LABEL\' in table \'T_JOB_LOT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_LOT.NO_OF_LABELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LABEL_QTY {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_LOT.LABEL_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LABEL_QTY\' in table \'T_JOB_LOT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_LOT.LABEL_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TOTAL_QTY {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_LOT.TOTAL_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL_QTY\' in table \'T_JOB_LOT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_LOT.TOTAL_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNIT_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_JOB_LOT.UNIT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIT_ID\' in table \'T_JOB_LOT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOB_LOT.UNIT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOB_ORDERRow T_JOB_ORDERRowParent {
                get {
                    return ((T_JOB_ORDERRow)(this.GetParentRow(this.Table.ParentRelations["T_JOB_ORDER_T_JOB_LOT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["T_JOB_ORDER_T_JOB_LOT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJOB_NONull() {
                return this.IsNull(this.tableT_JOB_LOT.JOB_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJOB_NONull() {
                this[this.tableT_JOB_LOT.JOB_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLINE_NONull() {
                return this.IsNull(this.tableT_JOB_LOT.LINE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLINE_NONull() {
                this[this.tableT_JOB_LOT.LINE_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPLAN_DATENull() {
                return this.IsNull(this.tableT_JOB_LOT.PLAN_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPLAN_DATENull() {
                this[this.tableT_JOB_LOT.PLAN_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIFTNull() {
                return this.IsNull(this.tableT_JOB_LOT.SHIFTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIFTNull() {
                this[this.tableT_JOB_LOT.SHIFTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJOB_LOTNull() {
                return this.IsNull(this.tableT_JOB_LOT.JOB_LOTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJOB_LOTNull() {
                this[this.tableT_JOB_LOT.JOB_LOTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNO_OF_LABELNull() {
                return this.IsNull(this.tableT_JOB_LOT.NO_OF_LABELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNO_OF_LABELNull() {
                this[this.tableT_JOB_LOT.NO_OF_LABELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLABEL_QTYNull() {
                return this.IsNull(this.tableT_JOB_LOT.LABEL_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLABEL_QTYNull() {
                this[this.tableT_JOB_LOT.LABEL_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOTAL_QTYNull() {
                return this.IsNull(this.tableT_JOB_LOT.TOTAL_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOTAL_QTYNull() {
                this[this.tableT_JOB_LOT.TOTAL_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNIT_IDNull() {
                return this.IsNull(this.tableT_JOB_LOT.UNIT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNIT_IDNull() {
                this[this.tableT_JOB_LOT.UNIT_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_JOB_ORDERRowChangeEvent : global::System.EventArgs {
            
            private T_JOB_ORDERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOB_ORDERRowChangeEvent(T_JOB_ORDERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOB_ORDERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_JOB_LOTRowChangeEvent : global::System.EventArgs {
            
            private T_JOB_LOTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOB_LOTRowChangeEvent(T_JOB_LOTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOB_LOTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591