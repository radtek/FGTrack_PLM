//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace HTN.BITS.UIL.PLASESS.TableSchema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DTS_DELIVERY_SLIP")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DTS_DELIVERY_SLIP : global::System.Data.DataSet {
        
        private T_LOADING_HDRDataTable tableT_LOADING_HDR;
        
        private T_LOADING_DTLDataTable tableT_LOADING_DTL;
        
        private global::System.Data.DataRelation relationT_LOADING_HDR_T_LOADING_DTL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DTS_DELIVERY_SLIP() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DTS_DELIVERY_SLIP(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_LOADING_HDR"] != null)) {
                    base.Tables.Add(new T_LOADING_HDRDataTable(ds.Tables["T_LOADING_HDR"]));
                }
                if ((ds.Tables["T_LOADING_DTL"] != null)) {
                    base.Tables.Add(new T_LOADING_DTLDataTable(ds.Tables["T_LOADING_DTL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_LOADING_HDRDataTable T_LOADING_HDR {
            get {
                return this.tableT_LOADING_HDR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_LOADING_DTLDataTable T_LOADING_DTL {
            get {
                return this.tableT_LOADING_DTL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DTS_DELIVERY_SLIP cln = ((DTS_DELIVERY_SLIP)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["T_LOADING_HDR"] != null)) {
                    base.Tables.Add(new T_LOADING_HDRDataTable(ds.Tables["T_LOADING_HDR"]));
                }
                if ((ds.Tables["T_LOADING_DTL"] != null)) {
                    base.Tables.Add(new T_LOADING_DTLDataTable(ds.Tables["T_LOADING_DTL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableT_LOADING_HDR = ((T_LOADING_HDRDataTable)(base.Tables["T_LOADING_HDR"]));
            if ((initTable == true)) {
                if ((this.tableT_LOADING_HDR != null)) {
                    this.tableT_LOADING_HDR.InitVars();
                }
            }
            this.tableT_LOADING_DTL = ((T_LOADING_DTLDataTable)(base.Tables["T_LOADING_DTL"]));
            if ((initTable == true)) {
                if ((this.tableT_LOADING_DTL != null)) {
                    this.tableT_LOADING_DTL.InitVars();
                }
            }
            this.relationT_LOADING_HDR_T_LOADING_DTL = this.Relations["T_LOADING_HDR_T_LOADING_DTL"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DTS_DELIVERY_SLIP";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DTS_DELIVERY_SLIP.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableT_LOADING_HDR = new T_LOADING_HDRDataTable();
            base.Tables.Add(this.tableT_LOADING_HDR);
            this.tableT_LOADING_DTL = new T_LOADING_DTLDataTable();
            base.Tables.Add(this.tableT_LOADING_DTL);
            this.relationT_LOADING_HDR_T_LOADING_DTL = new global::System.Data.DataRelation("T_LOADING_HDR_T_LOADING_DTL", new global::System.Data.DataColumn[] {
                        this.tableT_LOADING_HDR.LOADING_NOColumn}, new global::System.Data.DataColumn[] {
                        this.tableT_LOADING_DTL.LOADING_NOColumn}, false);
            this.Relations.Add(this.relationT_LOADING_HDR_T_LOADING_DTL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_LOADING_HDR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_LOADING_DTL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DTS_DELIVERY_SLIP ds = new DTS_DELIVERY_SLIP();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void T_LOADING_HDRRowChangeEventHandler(object sender, T_LOADING_HDRRowChangeEvent e);
        
        public delegate void T_LOADING_DTLRowChangeEventHandler(object sender, T_LOADING_DTLRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_LOADING_HDRDataTable : global::System.Data.TypedTableBase<T_LOADING_HDRRow> {
            
            private global::System.Data.DataColumn columnWH_ID;
            
            private global::System.Data.DataColumn columnLOADING_NO;
            
            private global::System.Data.DataColumn columnDELIVERY_DATE;
            
            private global::System.Data.DataColumn columnTRUCK_NO;
            
            private global::System.Data.DataColumn columnREMARK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOADING_HDRDataTable() {
                this.TableName = "T_LOADING_HDR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_LOADING_HDRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_LOADING_HDRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WH_IDColumn {
                get {
                    return this.columnWH_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOADING_NOColumn {
                get {
                    return this.columnLOADING_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DELIVERY_DATEColumn {
                get {
                    return this.columnDELIVERY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRUCK_NOColumn {
                get {
                    return this.columnTRUCK_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOADING_HDRRow this[int index] {
                get {
                    return ((T_LOADING_HDRRow)(this.Rows[index]));
                }
            }
            
            public event T_LOADING_HDRRowChangeEventHandler T_LOADING_HDRRowChanging;
            
            public event T_LOADING_HDRRowChangeEventHandler T_LOADING_HDRRowChanged;
            
            public event T_LOADING_HDRRowChangeEventHandler T_LOADING_HDRRowDeleting;
            
            public event T_LOADING_HDRRowChangeEventHandler T_LOADING_HDRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_LOADING_HDRRow(T_LOADING_HDRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOADING_HDRRow AddT_LOADING_HDRRow(string WH_ID, string LOADING_NO, string DELIVERY_DATE, string TRUCK_NO, string REMARK) {
                T_LOADING_HDRRow rowT_LOADING_HDRRow = ((T_LOADING_HDRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WH_ID,
                        LOADING_NO,
                        DELIVERY_DATE,
                        TRUCK_NO,
                        REMARK};
                rowT_LOADING_HDRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_LOADING_HDRRow);
                return rowT_LOADING_HDRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_LOADING_HDRDataTable cln = ((T_LOADING_HDRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_LOADING_HDRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWH_ID = base.Columns["WH_ID"];
                this.columnLOADING_NO = base.Columns["LOADING_NO"];
                this.columnDELIVERY_DATE = base.Columns["DELIVERY_DATE"];
                this.columnTRUCK_NO = base.Columns["TRUCK_NO"];
                this.columnREMARK = base.Columns["REMARK"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWH_ID = new global::System.Data.DataColumn("WH_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWH_ID);
                this.columnLOADING_NO = new global::System.Data.DataColumn("LOADING_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADING_NO);
                this.columnDELIVERY_DATE = new global::System.Data.DataColumn("DELIVERY_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDELIVERY_DATE);
                this.columnTRUCK_NO = new global::System.Data.DataColumn("TRUCK_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRUCK_NO);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("T_LOADING_HDRKey1", new global::System.Data.DataColumn[] {
                                this.columnLOADING_NO}, false));
                this.columnLOADING_NO.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOADING_HDRRow NewT_LOADING_HDRRow() {
                return ((T_LOADING_HDRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_LOADING_HDRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_LOADING_HDRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_LOADING_HDRRowChanged != null)) {
                    this.T_LOADING_HDRRowChanged(this, new T_LOADING_HDRRowChangeEvent(((T_LOADING_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_LOADING_HDRRowChanging != null)) {
                    this.T_LOADING_HDRRowChanging(this, new T_LOADING_HDRRowChangeEvent(((T_LOADING_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_LOADING_HDRRowDeleted != null)) {
                    this.T_LOADING_HDRRowDeleted(this, new T_LOADING_HDRRowChangeEvent(((T_LOADING_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_LOADING_HDRRowDeleting != null)) {
                    this.T_LOADING_HDRRowDeleting(this, new T_LOADING_HDRRowChangeEvent(((T_LOADING_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_LOADING_HDRRow(T_LOADING_HDRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DTS_DELIVERY_SLIP ds = new DTS_DELIVERY_SLIP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_LOADING_HDRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_LOADING_DTLDataTable : global::System.Data.TypedTableBase<T_LOADING_DTLRow> {
            
            private global::System.Data.DataColumn columnLOADING_NO;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnPIC;
            
            private global::System.Data.DataColumn columnTEL;
            
            private global::System.Data.DataColumn columnSO_NO;
            
            private global::System.Data.DataColumn columnREF_NO;
            
            private global::System.Data.DataColumn columnPRODUCT_NO;
            
            private global::System.Data.DataColumn columnPRODUCT_NAME;
            
            private global::System.Data.DataColumn columnNO_OF_BOX;
            
            private global::System.Data.DataColumn columnQTY;
            
            private global::System.Data.DataColumn columnUNIT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOADING_DTLDataTable() {
                this.TableName = "T_LOADING_DTL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_LOADING_DTLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_LOADING_DTLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOADING_NOColumn {
                get {
                    return this.columnLOADING_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PICColumn {
                get {
                    return this.columnPIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TELColumn {
                get {
                    return this.columnTEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_NOColumn {
                get {
                    return this.columnSO_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REF_NOColumn {
                get {
                    return this.columnREF_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NOColumn {
                get {
                    return this.columnPRODUCT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NAMEColumn {
                get {
                    return this.columnPRODUCT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NO_OF_BOXColumn {
                get {
                    return this.columnNO_OF_BOX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTYColumn {
                get {
                    return this.columnQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNITColumn {
                get {
                    return this.columnUNIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOADING_DTLRow this[int index] {
                get {
                    return ((T_LOADING_DTLRow)(this.Rows[index]));
                }
            }
            
            public event T_LOADING_DTLRowChangeEventHandler T_LOADING_DTLRowChanging;
            
            public event T_LOADING_DTLRowChangeEventHandler T_LOADING_DTLRowChanged;
            
            public event T_LOADING_DTLRowChangeEventHandler T_LOADING_DTLRowDeleting;
            
            public event T_LOADING_DTLRowChangeEventHandler T_LOADING_DTLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_LOADING_DTLRow(T_LOADING_DTLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOADING_DTLRow AddT_LOADING_DTLRow(T_LOADING_HDRRow parentT_LOADING_HDRRowByT_LOADING_HDR_T_LOADING_DTL, string CUSTOMER, string PIC, string TEL, string SO_NO, string REF_NO, string PRODUCT_NO, string PRODUCT_NAME, string NO_OF_BOX, string QTY, string UNIT) {
                T_LOADING_DTLRow rowT_LOADING_DTLRow = ((T_LOADING_DTLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CUSTOMER,
                        PIC,
                        TEL,
                        SO_NO,
                        REF_NO,
                        PRODUCT_NO,
                        PRODUCT_NAME,
                        NO_OF_BOX,
                        QTY,
                        UNIT};
                if ((parentT_LOADING_HDRRowByT_LOADING_HDR_T_LOADING_DTL != null)) {
                    columnValuesArray[0] = parentT_LOADING_HDRRowByT_LOADING_HDR_T_LOADING_DTL[1];
                }
                rowT_LOADING_DTLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_LOADING_DTLRow);
                return rowT_LOADING_DTLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_LOADING_DTLDataTable cln = ((T_LOADING_DTLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_LOADING_DTLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLOADING_NO = base.Columns["LOADING_NO"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnPIC = base.Columns["PIC"];
                this.columnTEL = base.Columns["TEL"];
                this.columnSO_NO = base.Columns["SO_NO"];
                this.columnREF_NO = base.Columns["REF_NO"];
                this.columnPRODUCT_NO = base.Columns["PRODUCT_NO"];
                this.columnPRODUCT_NAME = base.Columns["PRODUCT_NAME"];
                this.columnNO_OF_BOX = base.Columns["NO_OF_BOX"];
                this.columnQTY = base.Columns["QTY"];
                this.columnUNIT = base.Columns["UNIT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLOADING_NO = new global::System.Data.DataColumn("LOADING_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADING_NO);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnPIC = new global::System.Data.DataColumn("PIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIC);
                this.columnTEL = new global::System.Data.DataColumn("TEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL);
                this.columnSO_NO = new global::System.Data.DataColumn("SO_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_NO);
                this.columnREF_NO = new global::System.Data.DataColumn("REF_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_NO);
                this.columnPRODUCT_NO = new global::System.Data.DataColumn("PRODUCT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NO);
                this.columnPRODUCT_NAME = new global::System.Data.DataColumn("PRODUCT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NAME);
                this.columnNO_OF_BOX = new global::System.Data.DataColumn("NO_OF_BOX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO_OF_BOX);
                this.columnQTY = new global::System.Data.DataColumn("QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY);
                this.columnUNIT = new global::System.Data.DataColumn("UNIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("T_LOADING_DTLKey1", new global::System.Data.DataColumn[] {
                                this.columnLOADING_NO,
                                this.columnSO_NO,
                                this.columnPRODUCT_NO}, false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOADING_DTLRow NewT_LOADING_DTLRow() {
                return ((T_LOADING_DTLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_LOADING_DTLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_LOADING_DTLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_LOADING_DTLRowChanged != null)) {
                    this.T_LOADING_DTLRowChanged(this, new T_LOADING_DTLRowChangeEvent(((T_LOADING_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_LOADING_DTLRowChanging != null)) {
                    this.T_LOADING_DTLRowChanging(this, new T_LOADING_DTLRowChangeEvent(((T_LOADING_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_LOADING_DTLRowDeleted != null)) {
                    this.T_LOADING_DTLRowDeleted(this, new T_LOADING_DTLRowChangeEvent(((T_LOADING_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_LOADING_DTLRowDeleting != null)) {
                    this.T_LOADING_DTLRowDeleting(this, new T_LOADING_DTLRowChangeEvent(((T_LOADING_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_LOADING_DTLRow(T_LOADING_DTLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DTS_DELIVERY_SLIP ds = new DTS_DELIVERY_SLIP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_LOADING_DTLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_LOADING_HDRRow : global::System.Data.DataRow {
            
            private T_LOADING_HDRDataTable tableT_LOADING_HDR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_LOADING_HDRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_LOADING_HDR = ((T_LOADING_HDRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WH_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_HDR.WH_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WH_ID\' in table \'T_LOADING_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_HDR.WH_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOADING_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_HDR.LOADING_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADING_NO\' in table \'T_LOADING_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_HDR.LOADING_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DELIVERY_DATE {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_HDR.DELIVERY_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DELIVERY_DATE\' in table \'T_LOADING_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_HDR.DELIVERY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRUCK_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_HDR.TRUCK_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRUCK_NO\' in table \'T_LOADING_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_HDR.TRUCK_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REMARK {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_HDR.REMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARK\' in table \'T_LOADING_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_HDR.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWH_IDNull() {
                return this.IsNull(this.tableT_LOADING_HDR.WH_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWH_IDNull() {
                this[this.tableT_LOADING_HDR.WH_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOADING_NONull() {
                return this.IsNull(this.tableT_LOADING_HDR.LOADING_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOADING_NONull() {
                this[this.tableT_LOADING_HDR.LOADING_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDELIVERY_DATENull() {
                return this.IsNull(this.tableT_LOADING_HDR.DELIVERY_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDELIVERY_DATENull() {
                this[this.tableT_LOADING_HDR.DELIVERY_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRUCK_NONull() {
                return this.IsNull(this.tableT_LOADING_HDR.TRUCK_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRUCK_NONull() {
                this[this.tableT_LOADING_HDR.TRUCK_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREMARKNull() {
                return this.IsNull(this.tableT_LOADING_HDR.REMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREMARKNull() {
                this[this.tableT_LOADING_HDR.REMARKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOADING_DTLRow[] GetT_LOADING_DTLRows() {
                if ((this.Table.ChildRelations["T_LOADING_HDR_T_LOADING_DTL"] == null)) {
                    return new T_LOADING_DTLRow[0];
                }
                else {
                    return ((T_LOADING_DTLRow[])(base.GetChildRows(this.Table.ChildRelations["T_LOADING_HDR_T_LOADING_DTL"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_LOADING_DTLRow : global::System.Data.DataRow {
            
            private T_LOADING_DTLDataTable tableT_LOADING_DTL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_LOADING_DTLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_LOADING_DTL = ((T_LOADING_DTLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOADING_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_DTL.LOADING_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOADING_NO\' in table \'T_LOADING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_DTL.LOADING_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_DTL.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'T_LOADING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_DTL.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PIC {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_DTL.PICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PIC\' in table \'T_LOADING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_DTL.PICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEL {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_DTL.TELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEL\' in table \'T_LOADING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_DTL.TELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SO_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_DTL.SO_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SO_NO\' in table \'T_LOADING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_DTL.SO_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_DTL.REF_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REF_NO\' in table \'T_LOADING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_DTL.REF_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_DTL.PRODUCT_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_NO\' in table \'T_LOADING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_DTL.PRODUCT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_DTL.PRODUCT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_NAME\' in table \'T_LOADING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_DTL.PRODUCT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NO_OF_BOX {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_DTL.NO_OF_BOXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NO_OF_BOX\' in table \'T_LOADING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_DTL.NO_OF_BOXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QTY {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_DTL.QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QTY\' in table \'T_LOADING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_DTL.QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNIT {
                get {
                    try {
                        return ((string)(this[this.tableT_LOADING_DTL.UNITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIT\' in table \'T_LOADING_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOADING_DTL.UNITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOADING_HDRRow T_LOADING_HDRRow {
                get {
                    return ((T_LOADING_HDRRow)(this.GetParentRow(this.Table.ParentRelations["T_LOADING_HDR_T_LOADING_DTL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["T_LOADING_HDR_T_LOADING_DTL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOADING_NONull() {
                return this.IsNull(this.tableT_LOADING_DTL.LOADING_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOADING_NONull() {
                this[this.tableT_LOADING_DTL.LOADING_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tableT_LOADING_DTL.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMERNull() {
                this[this.tableT_LOADING_DTL.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPICNull() {
                return this.IsNull(this.tableT_LOADING_DTL.PICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPICNull() {
                this[this.tableT_LOADING_DTL.PICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELNull() {
                return this.IsNull(this.tableT_LOADING_DTL.TELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELNull() {
                this[this.tableT_LOADING_DTL.TELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_NONull() {
                return this.IsNull(this.tableT_LOADING_DTL.SO_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_NONull() {
                this[this.tableT_LOADING_DTL.SO_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREF_NONull() {
                return this.IsNull(this.tableT_LOADING_DTL.REF_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREF_NONull() {
                this[this.tableT_LOADING_DTL.REF_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_NONull() {
                return this.IsNull(this.tableT_LOADING_DTL.PRODUCT_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_NONull() {
                this[this.tableT_LOADING_DTL.PRODUCT_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_NAMENull() {
                return this.IsNull(this.tableT_LOADING_DTL.PRODUCT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_NAMENull() {
                this[this.tableT_LOADING_DTL.PRODUCT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNO_OF_BOXNull() {
                return this.IsNull(this.tableT_LOADING_DTL.NO_OF_BOXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNO_OF_BOXNull() {
                this[this.tableT_LOADING_DTL.NO_OF_BOXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTYNull() {
                return this.IsNull(this.tableT_LOADING_DTL.QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTYNull() {
                this[this.tableT_LOADING_DTL.QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNITNull() {
                return this.IsNull(this.tableT_LOADING_DTL.UNITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNITNull() {
                this[this.tableT_LOADING_DTL.UNITColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_LOADING_HDRRowChangeEvent : global::System.EventArgs {
            
            private T_LOADING_HDRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOADING_HDRRowChangeEvent(T_LOADING_HDRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOADING_HDRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_LOADING_DTLRowChangeEvent : global::System.EventArgs {
            
            private T_LOADING_DTLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOADING_DTLRowChangeEvent(T_LOADING_DTLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOADING_DTLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591